{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/search-results/account/account.component.ts","./src/app/search-results/account/account.component.html","./src/app/search-results/block/block.component.ts","./src/app/search-results/block/block.component.html","./src/app/search-results/evm-address/evm-address.component.ts","./src/app/search-results/evm-address/evm-address.component.html","./src/app/search-results/evm-block/evm-block.component.ts","./src/app/search-results/evm-block/evm-block.component.html","./src/app/search-results/evm-transaction/evm-transaction.component.ts","./src/app/search-results/evm-transaction/evm-transaction.component.html","./src/app/search-results/key/key.component.ts","./src/app/search-results/key/key.component.html","./src/app/search-results/search-results.component.ts","./src/app/search-results/search-results.component.html","./src/app/search-results/transaction/transaction.component.ts","./src/app/search-results/transaction/transaction.component.html","./src/app/services/account.service.ts","./src/app/services/chain.service.ts","./src/app/services/evm.service.ts","./src/app/services/launch-darkly/featureFlags.ts","./src/app/services/launch-darkly/launch-darkly.service.ts","./src/app/services/pagination.service.ts","./src/app/services/search.service.ts","./src/environments/environment.ts","./src/main.ts","ignored|/Users/alex.griffith/Documents/repos/hyperion-explorer-plugin/hyperion-explorer/node_modules/engine.io-client/lib/transports|ws"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {SearchResultsComponent} from './search-results/search-results.component';\nimport {AccountComponent} from './search-results/account/account.component';\nimport {TransactionComponent} from './search-results/transaction/transaction.component';\nimport {BlockComponent} from './search-results/block/block.component';\nimport {KeyComponent} from './search-results/key/key.component';\nimport {EvmAddressComponent} from './search-results/evm-address/evm-address.component';\nimport {EvmBlockComponent} from './search-results/evm-block/evm-block.component';\nimport {EvmTransactionComponent} from './search-results/evm-transaction/evm-transaction.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: HomeComponent\n  },\n  {\n    path: '',\n    component: SearchResultsComponent,\n    children: [\n      {path: 'account/:account_name', component: AccountComponent},\n      {path: 'transaction/:transaction_id', component: TransactionComponent},\n      {path: 'block/:block_num', component: BlockComponent},\n      {path: 'key/:key', component: KeyComponent},\n      {path: 'evm/address/:address', component: EvmAddressComponent},\n      {path: 'evm/transaction/:hash', component: EvmTransactionComponent},\n      {path: 'evm/block/:block_num', component: EvmBlockComponent}\n    ],\n  },\n  {\n    path: '**', component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    scrollPositionRestoration: 'enabled'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LaunchDarklyService } from './services/launch-darkly/launch-darkly.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\n\nexport class AppComponent implements OnInit {\n  public async initLaunchDarkly(): Promise<void> {\n    // const featureFlagClient = new LaunchDarklyService();\n    // await featureFlagClient.initLaunchDarkly();\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.initLaunchDarkly();\n  }\n}\n","<router-outlet></router-outlet>\n","import {Injectable, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatPaginatorIntl, MatPaginatorModule} from '@angular/material/paginator';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatCardModule} from '@angular/material/card';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {RouterModule} from '@angular/router';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatButtonModule} from '@angular/material/button';\nimport {HomeComponent} from './home/home.component';\nimport {SearchResultsComponent} from './search-results/search-results.component';\nimport {AccountComponent} from './search-results/account/account.component';\nimport {TransactionComponent} from './search-results/transaction/transaction.component';\nimport {BlockComponent} from './search-results/block/block.component';\nimport {KeyComponent} from './search-results/key/key.component';\nimport {EvmAddressComponent} from './search-results/evm-address/evm-address.component';\nimport {PaginationService} from './services/pagination.service';\nimport {EvmBlockComponent} from './search-results/evm-block/evm-block.component';\nimport {EvmTransactionComponent} from './search-results/evm-transaction/evm-transaction.component';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { LaunchDarklyService } from './services/launch-darkly/launch-darkly.service';\n\n@Injectable()\nexport class CustomPaginator extends MatPaginatorIntl {\n  constructor(private pagService: PaginationService) {\n    super();\n    this.getRangeLabel = (page, pageSize, length) => {\n      if (length === 0 || pageSize === 0) {\n        return `0 of ${length}`;\n      }\n      length = Math.max(length, 0);\n      const startIndex = page * pageSize;\n      const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n      return `${startIndex + 1} – ${endIndex} of ${this.pagService.totalItems} (${length} loaded)`;\n    };\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SearchResultsComponent,\n    AccountComponent,\n    TransactionComponent,\n    BlockComponent,\n    KeyComponent,\n    EvmAddressComponent,\n    EvmBlockComponent,\n    EvmTransactionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production}),\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatCardModule,\n    FontAwesomeModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatProgressBarModule,\n    MatTreeModule,\n    CdkTableModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatExpansionModule,\n    RouterModule,\n    MatProgressSpinnerModule,\n    NgxJsonViewerModule\n  ],\n  providers: [{provide: MatPaginatorIntl, useClass: CustomPaginator}, LaunchDarklyService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {debounceTime} from 'rxjs/operators';\nimport {SearchService} from '../services/search.service';\nimport {AccountService} from '../services/account.service';\nimport {faSearch} from '@fortawesome/free-solid-svg-icons/faSearch';\nimport {ChainService} from '../services/chain.service';\nimport {Title} from '@angular/platform-browser';\nimport { LaunchDarklyService } from 'src/app/services/launch-darkly/launch-darkly.service';\nimport { FeatureFlagName } from 'src/app/services/launch-darkly/featureFlags';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  searchForm: FormGroup;\n  filteredAccounts: string[];\n  faSearch = faSearch;\n  searchPlaceholder: string;\n  featureFlagClient: LaunchDarklyService;\n  isQueryingByBlockNumberEnabled: boolean;\n  placeholders = [\n    'Search by account name...',\n    'Search by transaction id...',\n    'Search by public key...'\n  ];\n  err = '';\n  private currentPlaceholder = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private accountService: AccountService,\n    private searchService: SearchService,\n    public chainData: ChainService,\n    private title: Title\n  ) {\n    this.searchForm = this.formBuilder.group({\n      search_field: ['', Validators.required]\n    });\n    this.filteredAccounts = [];\n    this.searchPlaceholder = this.placeholders[0];\n    this.featureFlagClient = new LaunchDarklyService();\n    setInterval(() => {\n      this.currentPlaceholder++;\n      if (!this.placeholders[this.currentPlaceholder]) {\n        this.currentPlaceholder = 0;\n      }\n      this.searchPlaceholder = this.placeholders[this.currentPlaceholder];\n    }, 2000);\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.searchForm.get('search_field').valueChanges.pipe(debounceTime(300)).subscribe(async (result) => {\n      this.filteredAccounts = await this.searchService.filterAccountNames(result);\n    });\n    if (this.chainData.chainInfoData.chain_name) {\n      this.title.setTitle(`${this.chainData.chainInfoData.chain_name} Hyperion Explorer`);\n    }\n    this.isQueryingByBlockNumberEnabled = false\n      // await this.featureFlagClient.variation(\n      //   FeatureFlagName.IsQueryingByBlockNumberEnabled\n      // );\n    if (this.isQueryingByBlockNumberEnabled) {\n      this.placeholders.push('Search by block number...');\n    }\n  }\n\n  async submit(): Promise<void> {\n    if (!this.searchForm.valid) {\n      return;\n    }\n    const searchText = this.searchForm.get('search_field').value;\n    this.searchForm.reset();\n    const status = this.searchService.submitSearch(searchText, this.filteredAccounts);\n    if (!status) {\n      this.err = 'no results for ' + searchText;\n    }\n  }\n}\n","<div style=\"height: 100vh\" fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\" >\n  <mat-card class=\"search-card\" fxLayout=\"column\" fxLayoutAlign=\"end center\">\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"text-align: center;\" fxLayoutGap=\"20px\">\n    <img src=\"assets/logo.png\" alt=\"logo\" class=\"logo\">\n    <form [formGroup]=\"searchForm\" (ngSubmit)=\"submit()\">\n\n\n      <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\n\n          <div fxLayout=\"column\">\n          <mat-form-field appearance=\"outline\" class=\"home-search-input\" style=\"height: 100%\" fxFlex=\"grow\">\n            <label>\n              <input matInput formControlName=\"search_field\" [matAutocomplete]=\"auto\"\n                     [placeholder]=\"searchPlaceholder\">\n            </label>\n            <mat-error *ngIf=\"err\">{{err}}</mat-error>\n          </mat-form-field>\n          </div>\n\n          <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"submit()\">\n            <mat-option *ngFor=\"let account of filteredAccounts\" [value]=\"account\">{{account}}</mat-option>\n          </mat-autocomplete>\n\n        <button mat-stroked-button matSuffix type=\"submit\" [attr.aria-label]=\"'search'\" class=\"search-btn\"\n                (keyup.enter)=\"submit()\">\n          <fa-icon [icon]=\"faSearch\"></fa-icon>\n        </button>\n\n      </div>\n\n    </form>\n      <div>\n        <div style=\"margin-bottom: 10px;\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"6px\">\n          <span>Connected to</span>\n          <span class=\"outline\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"5px\">\n            <img [src]=\"chainData.chainInfoData.logo\" alt=\"logo\" style=\"height: 28px\">\n            <span>{{chainData.chainInfoData.chain_name}}</span>\n          </span>\n        </div>\n        <div>Provided by <a [href]=\"chainData.chainInfoData.provider_url\" target=\"_blank\">{{chainData.chainInfoData.provider}}</a>\n        </div>\n      </div>\n    </div>\n  </mat-card>\n  <div class=\"faded footer-text\" style=\"\">Made with ❤ by EOS Rio</div>\n</div>\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AccountService} from '../../services/account.service';\nimport {MatSort} from '@angular/material/sort';\nimport {faClock} from '@fortawesome/free-solid-svg-icons/faClock';\nimport {faUserCircle} from '@fortawesome/free-solid-svg-icons/faUserCircle';\nimport {faCircle} from '@fortawesome/free-solid-svg-icons/faCircle';\nimport {faStar} from '@fortawesome/free-solid-svg-icons/faStar';\nimport {faLink} from '@fortawesome/free-solid-svg-icons/faLink';\nimport {faHistory} from '@fortawesome/free-solid-svg-icons/faHistory';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {faChevronRight} from '@fortawesome/free-solid-svg-icons/faChevronRight';\nimport {faChevronDown} from '@fortawesome/free-solid-svg-icons/faChevronDown';\nimport {faKey} from '@fortawesome/free-solid-svg-icons/faKey';\nimport {faUser} from '@fortawesome/free-solid-svg-icons/faUser';\nimport {faSadTear} from '@fortawesome/free-solid-svg-icons/faSadTear';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {faVoteYea} from '@fortawesome/free-solid-svg-icons/faVoteYea';\nimport {faQuestionCircle} from '@fortawesome/free-regular-svg-icons/faQuestionCircle';\nimport {AccountCreationData} from '../../interfaces';\nimport {ChainService} from '../../services/chain.service';\nimport {Title} from '@angular/platform-browser';\nimport { LaunchDarklyService } from 'src/app/services/launch-darkly/launch-darkly.service';\nimport { FeatureFlagName } from 'src/app/services/launch-darkly/featureFlags';\n\ninterface Permission {\n  perm_name: string;\n  parent: string;\n  required_auth: RequiredAuth;\n  children?: Permission[];\n}\n\ninterface RequiredAuth {\n  threshold: number;\n  keys: Keys[];\n  accounts?: Accs[];\n  waits?: Waits[];\n}\n\ninterface Keys {\n  key: string;\n  weight: number;\n}\n\ninterface Accs {\n  permission: Perm;\n  weight: number;\n}\n\ninterface Perm {\n  actor: string;\n  permission: string;\n}\n\ninterface Waits {\n  wait_sec: number;\n  weight: number;\n}\n\n/** Flat node with expandable and level information */\ninterface FlatNode {\n  expandable: boolean;\n  perm_name: string;\n  level: number;\n}\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit, OnDestroy {\n\n  @ViewChild(MatSort, {static: false}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: false}) paginator: MatPaginator;\n\n  // FontAwesome Icons\n  faClock = faClock;\n  faUserCircle = faUserCircle;\n  faCircle = faCircle;\n  faStar = faStar;\n  faLink = faLink;\n  faHistory = faHistory;\n  faChevronRight = faChevronRight;\n  faChevronDown = faChevronDown;\n  faSadTear = faSadTear;\n  faKey = faKey;\n  faUser = faUser;\n  faVote = faVoteYea;\n  faQuestionCircle = faQuestionCircle;\n\n  accountName: string;\n\n  columnsToDisplay: string[] = ['trx_id', 'action', 'data', 'block_num'];\n\n  treeControl: FlatTreeControl<FlatNode>;\n  featureFlagClient: LaunchDarklyService;\n  isQueryingTokenValueEnabled: boolean;\n  systemAccounts: string;\n\n  treeFlattener: MatTreeFlattener<any, any>;\n\n  dataSource: MatTreeFlatDataSource<any, any>;\n  detailedView = true;\n\n  systemPrecision = 4;\n  systemSymbol = '';\n  creationData: AccountCreationData = {\n    creator: undefined,\n    timestamp: undefined\n  };\n  systemTokenContract = 'eosio.token';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public accountService: AccountService,\n    public chainData: ChainService,\n    private title: Title\n  ) {\n\n    this.treeControl = new FlatTreeControl<FlatNode>(\n      node => node.level, node => node.expandable\n    );\n\n    this.treeFlattener = new MatTreeFlattener(\n      this.transformer, node => node.level, node => node.expandable, node => node.children\n    );\n\n    this.featureFlagClient = new LaunchDarklyService\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  }\n\n  ngOnDestroy(): void {\n    console.log('ngOnDestroy');\n    this.accountService.disconnectStream();\n  }\n\n  transformer(node: Permission, level: number): any {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      perm_name: node.perm_name,\n      level,\n      ...node\n    };\n  }\n\n  objectKeyCount(obj): number {\n    try {\n      return Object.keys(obj).length;\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n\n   async ngOnInit(): Promise<void> {\n    this.isQueryingTokenValueEnabled = false // await this.featureFlagClient.variation(FeatureFlagName.IsQueryingTokenValueEnabled);\n    this.systemAccounts = '[]' // JSON.parse((await this.featureFlagClient.variation(FeatureFlagName.VoiceSystemAccounts) as string) ?? '[]');\n\n    this.activatedRoute.params.subscribe(async (routeParams) => {\n\n      if (this.accountService.streamClientStatus) {\n        this.accountService.disconnectStream();\n      }\n\n      this.accountName = routeParams.account_name;\n      if (await this.accountService.loadAccountData(routeParams.account_name)) {\n\n        if (!this.chainData.chainInfoData.chain_name) {\n          this.title.setTitle(`${this.accountName} • Hyperion Explorer`);\n        } else {\n          this.title.setTitle(`${this.accountName} • ${this.chainData.chainInfoData.chain_name} Hyperion Explorer`);\n        }\n\n        const customCoreToken = this.chainData.chainInfoData.custom_core_token;\n        if (customCoreToken && customCoreToken !== '') {\n          const parts = this.chainData.chainInfoData.custom_core_token.split('::');\n          this.systemSymbol = parts[1];\n          this.systemTokenContract = parts[0];\n          const coreBalance = this.accountService.jsonData.tokens.find((v) => {\n            return v.symbol === this.systemSymbol && v.contract === this.systemTokenContract;\n          });\n          if (coreBalance) {\n            this.accountService.account.core_liquid_balance = coreBalance.amount + ' ' + this.systemSymbol;\n          }\n        } else {\n          this.systemSymbol = this.getSymbol(this.accountService.account.core_liquid_balance);\n        }\n\n        this.systemPrecision = this.getPrecision(this.accountService.account.core_liquid_balance);\n        if (this.systemSymbol === null) {\n          try {\n            this.systemSymbol = this.getSymbol(this.accountService.account.total_resources.cpu_weight);\n            if (this.systemSymbol === null) {\n              this.systemSymbol = 'SYS';\n            }\n          } catch (e) {\n            this.systemSymbol = 'SYS';\n          }\n        }\n        this.processPermissions();\n        setTimeout(() => {\n          this.accountService.tableDataSource.sort = this.sort;\n          this.accountService.tableDataSource.paginator = this.paginator;\n        }, 500);\n        this.creationData = await this.accountService.getCreator(routeParams.account_name);\n      }\n    });\n  }\n\n  getPrecision(asset: string): number {\n    if (asset) {\n      try {\n        return asset.split(' ')[0].split('.')[1].length;\n      } catch (e) {\n        return 4;\n      }\n    } else {\n      return 4;\n    }\n  }\n\n  getSymbol(asset: string): string {\n    if (asset) {\n      try {\n        return asset.split(' ')[1];\n      } catch (e) {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  liquidBalance(): number {\n    if (this.accountService.account.core_liquid_balance) {\n      return parseFloat(this.accountService.account.core_liquid_balance.split(' ')[0]);\n    }\n    return 0;\n  }\n\n  myCpuBalance(): number {\n    if (this.accountService.account.self_delegated_bandwidth) {\n      return parseFloat(this.accountService.account.self_delegated_bandwidth.cpu_weight.split(' ')[0]);\n    }\n    return 0;\n  }\n\n  myNetBalance(): number {\n    if (this.accountService.account.self_delegated_bandwidth) {\n      return parseFloat(this.accountService.account.self_delegated_bandwidth.net_weight.split(' ')[0]);\n    }\n    return 0;\n  }\n\n  cpuBalance(): number {\n    if (this.accountService.account.total_resources) {\n      return parseFloat(this.accountService.account.total_resources.cpu_weight.split(' ')[0]);\n    }\n    return 0;\n  }\n\n  netBalance(): number {\n    if (this.accountService.account.total_resources) {\n      return parseFloat(this.accountService.account.total_resources.net_weight.split(' ')[0]);\n    }\n    return 0;\n  }\n\n  totalBalance(): number {\n    const liquid = this.liquidBalance();\n    const cpu = this.myCpuBalance();\n    const net = this.myNetBalance();\n    return liquid + cpu + net;\n  }\n\n  stakedBalance(): number {\n    const cpu = this.myCpuBalance();\n    const net = this.myNetBalance();\n    return cpu + net;\n  }\n\n  cpuByOthers(): number {\n    const cpu = this.cpuBalance();\n    const mycpu = this.myCpuBalance();\n    return cpu - mycpu;\n  }\n\n  netByOthers(): number {\n    const net = this.netBalance();\n    const mynet = this.myNetBalance();\n    return net - mynet;\n  }\n\n  stakedbyOthers(): number {\n    const cpu = this.cpuBalance();\n    const net = this.netBalance();\n    const mycpu = this.myCpuBalance();\n    const mynet = this.myNetBalance();\n    return (cpu + net) - (mycpu + mynet);\n  }\n\n  refundBalance(): number {\n    let cpuRefund = 0;\n    let netRefund = 0;\n    if (this.accountService.account.refund_request) {\n      cpuRefund = parseFloat(this.accountService.account.refund_request.cpu_amount.split(' ')[0]);\n      netRefund = parseFloat(this.accountService.account.refund_request.net_amount.split(' ')[0]);\n    }\n    return cpuRefund + netRefund;\n  }\n\n  formatDate(date: string): string {\n    return new Date(date).toLocaleString();\n  }\n\n  getChildren(arr: Permission[], parent: string): Permission[] {\n    return arr.filter(value => value.parent === parent).map((value) => {\n      const children = this.getChildren(arr, value.perm_name);\n      if (children.length > 0) {\n        value.children = children;\n      }\n      return value;\n    });\n  }\n\n  private processPermissions(): void {\n    if (this.accountService.account) {\n      const permissions: Permission[] = this.accountService.account.permissions;\n      if (permissions) {\n        try {\n          this.dataSource.data = this.getChildren(permissions, '');\n          this.treeControl.expand(this.treeControl.dataNodes[0]);\n          this.treeControl.expand(this.treeControl.dataNodes[1]);\n        } catch (e) {\n          console.log(e);\n          this.dataSource.data = [];\n        }\n      }\n    }\n  }\n\n  isArray(value: any): boolean {\n    return value !== null && typeof value === 'object' && value.length > 0;\n  }\n\n  getType(subitem: any): string {\n    return typeof subitem;\n  }\n\n  stringifyObject(subitem: object): string {\n      return JSON.stringify(subitem, null, 2);\n  }\n\n  convertBytes(bytes: number): string {\n    if (bytes > (1024 ** 3)) {\n      return (bytes / (1024 ** 3)).toFixed(2) + ' GB';\n    }\n    if (bytes > (1024 ** 2)) {\n      return (bytes / (1024 ** 2)).toFixed(2) + ' MB';\n    }\n    if (bytes > 1024) {\n      return (bytes / (1024)).toFixed(2) + ' KB';\n    }\n    return bytes + ' bytes';\n  }\n\n  convertMicroS(micros: number): string {\n    let int = 0;\n    let remainder = 0;\n    const calcSec = 1000 ** 2;\n    const calcMin = calcSec * 60;\n    const calcHour = calcMin * 60;\n    if (micros > calcHour) {\n      int = Math.floor(micros / calcHour);\n      remainder = micros % calcHour;\n      return int + 'h ' + Math.round(remainder / calcMin) + 'min';\n    }\n    if (micros > calcMin) {\n      int = Math.floor(micros / calcMin);\n      remainder = micros % calcMin;\n      return int + 'min ' + Math.round(remainder / calcSec) + 's';\n    }\n    if (micros > calcSec) {\n      return (micros / calcSec).toFixed(2) + 's';\n    }\n    if (micros > 1000) {\n      return (micros / (1000)).toFixed(2) + 'ms';\n    }\n    return micros + 'µs';\n  }\n\n  changePage(event: PageEvent): void {\n\n    // disable streaming if enabled\n    if (this.accountService.streamClientStatus) {\n      this.accountService.toggleStreaming();\n    }\n\n    const maxPages = Math.floor(event.length / event.pageSize);\n    console.log(event);\n    console.log(`${event.pageIndex} / ${maxPages}`);\n    try {\n      if (event.pageIndex === maxPages - 1) {\n        this.accountService.loadMoreActions(this.accountName).catch(console.log);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","<mat-progress-spinner [diameter]=\"45\" *ngIf=\"!accountService.loaded\" mode=\"indeterminate\"></mat-progress-spinner>\n\n<div class=\"container\">\n\n  <div *ngIf=\"!accountService.jsonData && accountService.loaded && !systemAccounts.includes(accountName)\" fxLayout=\"column\"\n       fxLayoutAlign=\"start center\"\n       fxLayoutGap=\"15px\" style=\"height: 100%\">\n    <mat-card class=\"width-100\">\n      <h1 class=\"faded\">\n        <fa-icon [icon]=\"faSadTear\" style=\"margin-right: 5px\"></fa-icon>\n        Account not found\n      </h1>\n      <div>We couldn't find the account <strong>{{accountName}}</strong></div>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"!accountService.jsonData && accountService.loaded && systemAccounts.includes(accountName)\" fxLayout=\"column\"\n       fxLayoutAlign=\"start center\"\n       fxLayoutGap=\"15px\" style=\"height: 100%\">\n    <mat-card class=\"width-100\">\n      <h1>\n        <fa-icon [icon]=\"faSadTear\" style=\"margin-right: 5px\"></fa-icon>\n        Access Denied\n      </h1>\n\n      <h3>\n        You do not have permission to view this account.\n      </h3>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"accountService.jsonData && accountService.loaded\" fxLayout=\"column\"\n       fxLayoutAlign=\"start center\"\n       fxLayoutGap=\"15px\">\n\n    <mat-card fxFlex=\"100\" fxFlexFill>\n      <h2 style=\"letter-spacing: 1px;\">\n        <fa-icon [icon]=\"faUserCircle\" style=\"margin-right: 5px\"></fa-icon>\n        {{accountService.account['account_name']}}\n      </h2>\n\n      <div fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between start\" fxLayoutGap.gt-xs=\"30px\"\n           fxLayout.lt-sm=\"column\" fxLayoutAlign.lt-sm=\"start stretch\" fxLayoutGap.lt-sm=\"20px\">\n\n        <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxFlex.gt-xs=\"316px\" class=\"mt-7\" style=\"height: 100%\"\n             fxFlexFill>\n          <div class=\"total-balance width-100\">\n            <strong>Total Balance: </strong>\n            <span class=\"float-r\">{{totalBalance() | number: '1.0-' + systemPrecision}} {{systemSymbol}}</span>\n          </div>\n          <div class=\"mb-5 width-100\">\n            <strong>Liquid Balance: </strong>\n            <span class=\"float-r\">{{liquidBalance() | number: '1.0-' + systemPrecision}} {{systemSymbol}}</span>\n          </div>\n          <div class=\"mb-5 width-100\">\n            <strong>Staked Balance: </strong>\n            <span class=\"float-r\">{{stakedBalance() | number: '1.0-' + systemPrecision}} {{systemSymbol}}</span></div>\n          <div class=\"width-100\">\n            <strong>Refunding: </strong>\n            <span class=\"float-r\">{{refundBalance() | number: '1.0-' + systemPrecision}} {{systemSymbol}}</span>\n          </div>\n          <div class=\"width-100\" style=\"margin-top: 12px\">\n            <div *ngIf=\"creationData && creationData.creator\" class=\"mt-7 width-100\">\n              <strong>Created by: </strong>\n              <a [routerLink]=\"['/account', creationData.creator]\"\n                 class=\"float-r link-gray\">{{creationData.creator}}</a>\n            </div>\n            <div *ngIf=\"creationData && creationData.timestamp\" class=\"mt-7 width-100\">\n              <strong>Created on: </strong>\n              <span class=\"float-r\">{{formatDate(creationData.timestamp)}}</span>\n            </div>\n          </div>\n        </div>\n\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"start start\" fxFlex=\"grow\">\n          <div fxFlex.gt-sm=\"287px\" fxFlex.lt-md=\"100\" ngStyle.gt-sm=\"margin-right: 40px\" class=\"full-width\">\n            <div>\n              <span class=\"title\">CPU</span>\n              <span class=\"faded used\">{{(accountService.account['cpu_limit']['used'] /\n                accountService.account['cpu_limit']['max']) * 100 | number: '1.0-2'}}% used</span>\n              <span class=\"values float-r\">{{convertMicroS(accountService.account['cpu_limit']['used'])}}\n                / {{convertMicroS(accountService.account['cpu_limit']['max'])}}\n          </span>\n            </div>\n            <mat-progress-bar class=\"progress-bar\" mode=\"determinate\"\n                              [value]=\"(accountService.account['cpu_limit']['used'] / accountService.account['cpu_limit']['max']) * 100\"></mat-progress-bar>\n            <div class=\"small-info\">\n              <div class=\"m-bottom\"><span>Self-staked:</span><span\n                class=\"float-r\">{{myCpuBalance() | number: '1.0-' + systemPrecision}} {{systemSymbol}}</span></div>\n              <div class=\"m-bottom\"><span>Staked by others:</span><span\n                class=\"float-r\">{{cpuByOthers() | number: '1.0-' + systemPrecision}} {{systemSymbol}}</span></div>\n              <div><span>Total in CPU:</span><span class=\"float-r\">{{cpuBalance() | number: '1.0-' + systemPrecision}}\n                {{systemSymbol}}</span></div>\n            </div>\n          </div>\n          <div fxFlex.gt-sm=\"287px\" fxFlex.lt-md=\"100\" ngClass.lt-md=\"mt-30\" class=\"full-width mt-responsive\">\n            <div>\n              <span class=\"title\">NET</span>\n              <span class=\"faded used\">{{(accountService.account['net_limit']['used'] /\n                accountService.account['net_limit']['max']) * 100 | number: '1.0-2'}}% used</span>\n              <span class=\"values float-r\">{{convertBytes(accountService.account['net_limit']['used'])}}\n                / {{convertBytes(accountService.account['net_limit']['max'])}}\n          </span>\n            </div>\n            <mat-progress-bar class=\"progress-bar\" mode=\"determinate\"\n                              [value]=\"(accountService.account['net_limit']['used'] / accountService.account['net_limit']['max']) * 100\"></mat-progress-bar>\n            <div class=\"small-info\">\n              <div class=\"m-bottom\"><span>Self-staked:</span><span\n                class=\"float-r\">{{myNetBalance() | number: '1.0-' + systemPrecision}} {{systemSymbol}}</span></div>\n              <div class=\"m-bottom\"><span>Staked by others:</span><span\n                class=\"float-r\">{{netByOthers() | number: '1.0-' + systemPrecision}} {{systemSymbol}}</span></div>\n              <div><span>Total in NET:</span><span class=\"float-r\">{{netBalance() | number: '1.0-' + systemPrecision}}\n                {{systemSymbol}}</span></div>\n            </div>\n          </div>\n          <div fxFlex=\"100\" class=\"mt-30\">\n            <div><span class=\"title mt-6\">RAM</span>\n              <span class=\"faded used\">{{(accountService.account['ram_usage'] /\n                accountService.account['ram_quota']) *\n              100 | number}}% used</span>\n              <span class=\"values float-r\">{{convertBytes(accountService.account['ram_usage'])}}\n                / {{convertBytes(accountService.account['ram_quota'])}}\n          </span>\n            </div>\n\n            <mat-progress-bar class=\"progress-bar\" mode=\"determinate\"\n                              [value]=\"(accountService.account['ram_usage'] / accountService.account['ram_quota']) * 100\"></mat-progress-bar>\n          </div>\n        </div>\n      </div>\n    </mat-card>\n\n    <div fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"space-between\"\n         fxLayout.lt-md=\"column\" fxLayoutAlign.lt-md=\"start auto\"\n         fxLayoutGap=\"10px\" fxFlexFill fxFlex=\"auto\">\n\n      <mat-card fxFlex.gt-sm=\"25\" ngClass.gt-sm=\"middle-card\" *ngIf=\"isQueryingTokenValueEnabled\">\n        <h3>\n          <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n            <fa-icon [icon]=\"faCircle\" transform=\"grow-3\"></fa-icon>\n            <fa-icon [icon]=\"faStar\" [inverse]=\"true\" transform=\"shrink-5\"></fa-icon>\n          </fa-layers>\n          Tokens\n          <fa-icon [icon]=\"faQuestionCircle\" class=\"faded float-r pointer\"\n                   matTooltip=\"Only liquid balances are displayed\" matTooltipClass=\"tooltip-bigger\"></fa-icon>\n        </h3>\n\n        <div fxLayout.sm=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayout.gt-sm=\"column\"\n             fxLayoutGap.sm=\"43px\" fxLayoutGap.lt-sm=\"10px\" fxLayoutGap.gt-sm=\"10px\"\n             *ngIf=\"accountService.tokens.length > 0\">\n\n          <div *ngFor=\"let token of accountService.tokens\"\n               fxFlex.sm=\"0 0 calc((100% - 132px) / 3)\">\n            <div class=\"token-cell\">\n              <div class=\"faded monospace div-link\"\n                   [routerLink]=\"['/account', token.contract]\">{{token.contract}}</div>\n              <div class=\"token-amount\" [ngClass.lt-sm]=\"'break-word'\">{{token.amount | number :'1.0-' +\n              (token.precision || 4)}}\n                <span class=\"token\">{{token.symbol}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!accountService.tokens || !accountService.tokens.length \">No tokens to display</div>\n      </mat-card>\n\n      <mat-card fxFlex.gt-sm=\"100\" ngClass.gt-sm=\"middle-card\">\n\n        <h3>\n          <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n            <fa-icon [icon]=\"faCircle\" transform=\"grow-3\"></fa-icon>\n            <fa-icon [icon]=\"faLink\" [inverse]=\"true\" transform=\"shrink-5\"></fa-icon>\n          </fa-layers>\n          Permissions & Keys\n        </h3>\n\n        <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n          <!-- This is the tree node template for leaf nodes -->\n\n          <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n            <!-- use a disabled button to provide padding for tree leaf -->\n            <button mat-icon-button disabled></button>\n            <div fxLayout=\"column\" fxLayoutGap=\"7px\" class=\"permission-cell\">\n              <div><h3 class=\"primary\" style=\"display: inline; letter-spacing: 0.7px;\">{{node.perm_name}}</h3></div>\n              <ng-container *ngIf=\"node['required_auth']['keys'].length > 0\">\n                <div *ngFor=\"let key of node['required_auth']['keys']\">\n                  <div>\n                    <strong class=\"space-right\" matTooltip=\"weight / threshold\" matTooltipClass=\"tooltip-bigger\">\n                      {{key.weight}}/{{node.required_auth.threshold}}\n                    </strong>\n                    <fa-icon [icon]=\"faKey\"></fa-icon>\n                    <a [routerLink]=\"['/key', key.key]\" class=\"monospace m-left break-word link-gray\">{{key.key}}\n                    </a>\n                  </div>\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\"node['required_auth']['accounts'].length > 0\">\n                <div *ngFor=\"let acc of node['required_auth']['accounts']\">\n                  <strong class=\"space-right\" matTooltip=\"weight / threshold\" matTooltipClass=\"tooltip-bigger\">\n                    {{acc.weight}}/{{node.required_auth.threshold}}\n                  </strong>\n                  <fa-icon [icon]=\"faUser\"></fa-icon>\n                  <a [routerLink]=\"['/account', acc.permission.actor]\"\n                     class=\"m-left link-blue\">{{acc.permission.actor}}</a>@{{acc['permission'].permission}}\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\"node['required_auth']['waits'].length > 0\">\n                <div *ngFor=\"let waits of node['required_auth']['waits']\">\n                  <strong class=\"space-right\" matTooltip=\"weight / threshold\" matTooltipClass=\"tooltip-bigger\">\n                    {{waits.weight}}/{{node.required_auth.threshold}}\n                  </strong>\n                  <fa-icon [icon]=\"faClock\"></fa-icon>\n                  <span class=\"m-left\">{{waits.wait_sec}}s</span>\n                </div>\n              </ng-container>\n            </div>\n          </mat-tree-node>\n\n          <!-- This is the tree node template for expandable nodes -->\n          <!--suppress AngularUndefinedBinding -->\n          <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n            <button mat-icon-button matTreeNodeToggle>\n              <fa-icon [icon]=\"treeControl.isExpanded(node) ? faChevronDown : faChevronRight\"></fa-icon>\n            </button>\n            <div fxLayout=\"column\" fxLayoutGap=\"7px\" class=\"permission-cell\">\n              <div><h3 class=\"primary\" style=\"display: inline; letter-spacing: 0.7px;\">{{node.perm_name}}</h3></div>\n              <ng-container *ngIf=\"node['required_auth']['keys'].length > 0\">\n                <div *ngFor=\"let key of node['required_auth']['keys']\">\n                  <div>\n                    <strong class=\"space-right\" matTooltip=\"weight / threshold\" matTooltipClass=\"tooltip-bigger\">\n                      {{key.weight}}/{{node.required_auth.threshold}}\n                    </strong>\n                    <fa-icon [icon]=\"faKey\"></fa-icon>\n                    <a [routerLink]=\"['/key', key.key]\" class=\"monospace m-left break-word link-gray\">{{key.key}}\n                    </a>\n                  </div>\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\"node['required_auth']['accounts'].length > 0\">\n                <div *ngFor=\"let acc of node['required_auth']['accounts']\">\n                  <strong class=\"space-right\" matTooltip=\"weight / threshold\" matTooltipClass=\"tooltip-bigger\">\n                    {{acc.weight}}/{{node.required_auth.threshold}}\n                  </strong>\n                  <fa-icon [icon]=\"faUser\"></fa-icon>\n                  <a [routerLink]=\"['/account', acc.permission.actor]\"\n                     class=\"m-left link-blue\">{{acc.permission.actor}}</a>@{{acc.permission.permission}}\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\"node['required_auth']['waits'].length > 0\">\n                <div *ngFor=\"let waits of node['required_auth']['waits']\">\n                  <strong class=\"space-right\" matTooltip=\"weight / threshold\" matTooltipClass=\"tooltip-bigger\">\n                    {{waits.weight}}/{{node.required_auth.threshold}}\n                  </strong>\n                  <fa-icon [icon]=\"faClock\"></fa-icon>\n                  <span class=\"m-left\">{{waits.wait_sec}}s</span>\n                </div>\n              </ng-container>\n            </div>\n          </mat-tree-node>\n        </mat-tree>\n      </mat-card>\n    </div>\n\n    <mat-accordion class=\"width-100 vote-card\"\n                   *ngIf=\"accountService.account['voter_info'] && (accountService.account['voter_info'].proxy || accountService.account['voter_info'].producers.length > 0)\">\n      <mat-expansion-panel [disabled]=\"accountService.account['voter_info'].producers.length <= 0\"\n                           [hideToggle]=\"accountService.account['voter_info'].producers.length <= 0\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            <h3 class=\"vote-card-title\">\n              <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n                <fa-icon [icon]=\"faCircle\" transform=\"grow-3\"></fa-icon>\n                <fa-icon [icon]=\"faVote\" [inverse]=\"true\" transform=\"shrink-4\"></fa-icon>\n              </fa-layers>\n              Votes\n            </h3>\n          </mat-panel-title>\n          <mat-panel-description style=\"margin-top: 22px;\">\n            <div *ngIf=\"accountService.account['voter_info']\">\n              {{accountService.account['account_name']}} is voting in\n              <span *ngIf=\"accountService.account['voter_info'].proxy\">proxy <a\n                [routerLink]=\"['/account', accountService.account['voter_info'].proxy]\"\n                class=\"link-blue\">{{accountService.account['voter_info'].proxy}}</a></span>\n              <span *ngIf=\"accountService.account['voter_info'].producers.length > 0\">\n              <strong>{{accountService.account['voter_info'].producers.length}}</strong> producer<span\n                *ngIf=\"accountService.account['voter_info'].producers.length > 1\">s</span>\n            </span>\n            </div>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n\n        <div *ngIf=\"accountService.account['voter_info'].producers.length > 0\">\n        <span *ngFor=\"let producer of accountService.account['voter_info'].producers; let last = last;\">\n          <a [routerLink]=\"['/account', producer]\" class=\"link-blue\">{{producer}}</a><span *ngIf=\"!last\">, </span>\n        </span>\n        </div>\n\n      </mat-expansion-panel>\n    </mat-accordion>\n\n    <mat-card fxFlexFill fxFlex=\"100\">\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n        <h3 style=\"margin-top: 0;\">\n          <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n            <fa-icon [icon]=\"faCircle\" transform=\"grow-3\"></fa-icon>\n            <fa-icon [icon]=\"faHistory\" [inverse]=\"true\" transform=\"shrink-5\"></fa-icon>\n          </fa-layers>\n          Actions\n        </h3>\n\n        <span class=\"lib\">Last Irreversible Block: <strong class=\"monospace\">{{accountService.libNum}}</strong></span>\n\n        <div *ngIf=\"accountService.streamClientLoaded\" (click)=\"accountService.toggleStreaming()\" class=\"livestream\"\n             matTooltip=\"click to turn on/off\"\n             matTooltipClass=\"tooltip-bigger\">\n          action live streaming <span\n          class=\"w-500\">{{accountService.streamClientStatus ? 'enabled' : 'disabled'}}</span>\n          <span class=\"dot\"\n                [ngClass]=\"{'pulse': accountService.streamClientStatus, 'red-dot': !accountService.streamClientStatus}\"></span>\n        </div>\n      </div>\n      <table mat-table [dataSource]=\"accountService.tableDataSource\"\n             matSort\n             matSortActive=\"block_num\"\n             matSortStart=\"desc\"\n             matSortDirection=\"desc\" class=\"actions-table\">\n\n        <!-- TX Column -->\n        <ng-container matColumnDef=\"trx_id\">\n          <th mat-header-cell *matHeaderCellDef [ngStyle.gt-xs]=\"{'min-width': '100px'}\"> TX</th>\n          <td mat-cell *matCellDef=\"let action\" data-label=\"TX\">\n          <span *ngIf=\"accountService.libNum < action['block_num']\"\n                matTooltip=\"time until irreversible\" matTooltipClass=\"tooltip-bigger\">\n            <fa-icon [icon]=\"faClock\" class=\"accent\" style=\"margin-right: 1px\"></fa-icon>\n            {{(action['block_num'] - accountService.libNum) / 2}}s\n          </span>\n            <a [routerLink]=\"['/transaction', action['trx_id']]\" class=\"link-blue\">\n              {{action['trx_id'].slice(0, 8)}}...\n            </a>\n          </td>\n        </ng-container>\n\n        <!-- Action Column -->\n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef\n              [ngStyle.gt-xs]=\"{'padding-left': '14px', 'padding-right':'14px','min-width': '100px'}\"\n              [ngStyle.gt-sm]=\"{'min-width': '240px'}\">\n            Action\n          </th>\n          <td mat-cell *matCellDef=\"let action\" [ngStyle.gt-xs]=\"{'padding-left': '14px', 'padding-right':'14px'}\"\n              data-label=\"Action\">\n          <span class=\"action-cell\" [ngStyle.lt-md]=\"{'padding':'0'}\" [ngClass.gt-sm]=\"'action-border'\">\n            <span class=\"accent w-500\">{{action['act']['name']}}</span> on\n            <span [routerLink]=\"['/account', action['act']['account']]\" class=\"w-500 div-link\">\n              {{action['act']['account']}}\n            </span>\n          </span>\n          </td>\n        </ng-container>\n\n        <!-- Data Column -->\n        <ng-container matColumnDef=\"data\">\n          <th mat-header-cell *matHeaderCellDef> Data</th>\n          <td mat-cell *matCellDef=\"let action\" [ngStyle.gt-xs]=\"{'padding': '10px 10px 7px 0'}\" data-label=\"Data\">\n\n            <!-- DETAILED ACTION DATA VIEW-->\n            <ng-container *ngIf=\"detailedView\">\n\n              <div *ngFor=\"let item of action['act']['data'] | keyvalue\"\n                   [ngClass]=\"{'data-item': objectKeyCount(action['act']['data']) > 1}\">\n\n                <ng-container *ngIf=\"isArray(item.value) && action['act']['account'] !== 'eosio.evm' && action['act']['name'] !== 'raw'\">\n                  <span class=\"w-500\">{{item.key}} [{{item.value.length}}]</span>:\n\n                  <div style=\"margin-top: 5px\" *ngFor=\"let subitem of item.value\">\n\n                    <ng-container *ngIf=\"getType(subitem) === 'string'\">\n                      <div style=\"margin-left: 15px\"><span class=\"break-word\">• {{subitem}}</span></div>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"getType(subitem) === 'object'\">\n                      <div *ngFor=\"let elem of subitem | keyvalue\"\n                           [ngClass]=\"{'data-item': objectKeyCount(subitem) > 1}\">\n                    <span class=\"w-500\" style=\"margin-left: 15px\">\n                      {{elem.key}}</span>: <span class=\"break-word\">\n                        {{stringifyObject(elem.value)}}\n                      </span>\n                      </div>\n                    </ng-container>\n\n                  </div>\n\n                </ng-container>\n\n                <ng-container *ngIf=\"!isArray(item.value)\">\n                  <ng-container\n                    *ngIf=\"action['act']['account'] === 'eosio.evm' && action['act']['name'] === 'raw' && ['to','from','hash','value','block'].includes(item.key); else elseBlock\">\n                    <div>\n                      <span class=\"w-500\">{{item.key}}</span>:\n                      <span *ngIf=\"item.value\" class=\"break-word\">\n                        <a *ngIf=\"item.key === 'to' || item.key === 'from'; else notAddress\"\n                           [routerLink]=\"['/evm/address', item.value]\" class=\"link-blue\"\n                        >{{item.value}}</a>\n                        <ng-template #notAddress>\n                          <a *ngIf=\"item.key === 'hash'; else notHash\" class=\"link-blue\"\n                             [routerLink]=\"['/evm/transaction', item.value]\">\n                            {{item.value}}</a>\n                          <ng-template #notHash>\n                            <a *ngIf=\"item.key === 'block'; else notBlock\" class=\"link-blue\"\n                               [routerLink]=\"['/evm/block', item.value]\">\n                              {{item.value}}</a> \n                            <ng-template #notBlock>{{(item.value / 1000000000000000000 ).toFixed(4)}} TLOS</ng-template>\n                          </ng-template>\n                        </ng-template>\n                      </span>\n                    </div>\n                  </ng-container>\n                  <ng-template *ngIf=\"action['act']['account'] !== 'eosio.evm' && action['act']['name'] !== 'raw'\" #elseBlock>\n                    <span class=\"w-500\">{{item.key}}</span>:\n                    <span *ngIf=\"item.value\" class=\"break-word\">{{item.value}}</span>\n                    <span *ngIf=\"!item.value\" class=\"break-word\" style=\"font-style: italic\">empty</span>\n                  </ng-template>\n                </ng-container>\n\n              </div>\n\n              <span *ngIf=\"getType(action['act']['data'])=== 'string'\" class=\"break-word\" style=\"font-style: italic\">\n              {{action['act']['data']}}\n            </span>\n\n            </ng-container>\n\n            <ng-container *ngIf=\"!detailedView\">\n\n            </ng-container>\n          </td>\n        </ng-container>\n\n        <!-- Block & Date Column -->\n        <ng-container matColumnDef=\"block_num\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header [ngStyle.gt-xs]=\"{'min-width': '70px'}\">Block & Date\n          </th>\n          <td mat-cell *matCellDef=\"let action\" data-label=\"Block & Date\">\n            <a [routerLink]=\"['/block', action['block_num']]\" class=\"link-blue\">{{action['block_num']}}</a>\n            <br>\n            <span> {{formatDate(action['@timestamp'])}}</span>\n          </td>\n        </ng-container>\n\n        <!--suppress AngularUndefinedBinding -->\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n\n        <!--suppress AngularUndefinedBinding -->\n        <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n      </table>\n\n      <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\"\n                     [length]=\"accountService.tableDataSource.filteredData.length\"\n                     (page)=\"changePage($event)\"\n                     showFirstLastButtons>\n      </mat-paginator>\n\n      <button mat-stroked-button color=\"primary\" class=\"float-r\" style=\"margin-right: 16px;\"\n              (click)=\"accountService.loadMoreActions(accountName)\">\n        load more actions\n      </button>\n\n    </mat-card>\n\n  </div>\n\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {faCircle} from '@fortawesome/free-solid-svg-icons/faCircle';\nimport {faCube} from '@fortawesome/free-solid-svg-icons/faCube';\nimport {ActivatedRoute} from '@angular/router';\nimport {AccountService} from '../../services/account.service';\nimport {faHourglassStart} from '@fortawesome/free-solid-svg-icons/faHourglassStart';\nimport {faLock} from '@fortawesome/free-solid-svg-icons/faLock';\nimport {faHistory} from '@fortawesome/free-solid-svg-icons/faHistory';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons/faSpinner';\nimport {faSadTear} from '@fortawesome/free-solid-svg-icons/faSadTear';\nimport {faChevronRight} from '@fortawesome/free-solid-svg-icons/faChevronRight';\nimport {faChevronDown} from '@fortawesome/free-solid-svg-icons/faChevronDown';\nimport {ChainService} from '../../services/chain.service';\nimport {Title} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-block',\n  templateUrl: './block.component.html',\n  styleUrls: ['./block.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\n\nexport class BlockComponent implements OnInit, OnDestroy {\n  columnsToDisplay: string[] = ['icon', 'id', 'root', 'action'];\n  columnsInside: string[] = ['action', 'data', 'auth'];\n  expandedElement: any | null;\n  faCircle = faCircle;\n  faBlock = faCube;\n  faLock = faLock;\n  faHourglass = faHourglassStart;\n  faHistory = faHistory;\n  faChevronRight = faChevronRight;\n  faChevronDown = faChevronDown;\n  faSadTear = faSadTear;\n  faSpinner = faSpinner;\n  block: any = {\n    transactions: [],\n    status: '',\n    number: 0\n  };\n  blockNum: string;\n  countdownLoop: any;\n  countdownTimer = 0;\n\n  objectKeyCount(obj): number {\n    try {\n      return Object.keys(obj).length;\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  constructor(private activatedRoute: ActivatedRoute,\n              public accountService: AccountService,\n              public chainData: ChainService,\n              private title: Title) {\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(async (routeParams) => {\n      this.blockNum = routeParams.block_num;\n      this.block = await this.accountService.loadBlockData(routeParams.block_num);\n\n      if (!this.chainData.chainInfoData.chain_name) {\n        this.title.setTitle(`#${routeParams.block_num} • Hyperion Explorer`);\n      } else {\n        this.title.setTitle(`#${routeParams.block_num} • ${this.chainData.chainInfoData.chain_name} Hyperion Explorer`);\n      }\n\n      if (this.block && this.block.status === 'pending') {\n        await this.reloadCountdownTimer();\n        this.countdownLoop = setInterval(async () => {\n          this.countdownTimer--;\n          if (this.countdownTimer <= 0) {\n            await this.reloadCountdownTimer();\n            if (this.accountService.libNum > this.block.number) {\n              clearInterval(this.countdownLoop);\n            }\n          }\n        }, 1000);\n      }\n    });\n  }\n\n  async reloadCountdownTimer(): Promise<void> {\n    await this.accountService.updateLib();\n    this.countdownTimer = Math.ceil((this.block.number - this.accountService.libNum) / 2);\n  }\n\n  ngOnDestroy(): void {\n    if (this.countdownLoop) {\n      clearInterval(this.countdownLoop);\n    }\n  }\n\n  formatDate(date: string): string {\n    return new Date(date).toLocaleString();\n  }\n\n}\n","<mat-progress-spinner [diameter]=\"45\" *ngIf=\"!accountService.loaded\" mode=\"indeterminate\"></mat-progress-spinner>\n\n<div class=\"container\">\n  <div *ngIf=\"!block && accountService.loaded\" fxLayout=\"column\" style=\"height: 100%\">\n    <mat-card>\n      <h1 class=\"faded\">\n        <fa-icon [icon]=\"faSadTear\" style=\"margin-right: 5px\"></fa-icon>\n        Block not found\n      </h1>\n      <div>We couldn't find block <strong>{{blockNum}}</strong></div>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"block && accountService.loaded\" fxLayout=\"column\" fxLayoutGap=\"15px\" fxLayoutAlign=\"start center\">\n    <mat-card fxFlex=\"100\" fxFlexFill>\n      <div style=\"border-bottom: 1px solid #e4e4e4; margin-bottom: 12px;\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n          <h2>\n            <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n              <fa-icon [icon]=\"faCircle\" transform=\"grow-1\"></fa-icon>\n              <fa-icon [icon]=\"faBlock\" [inverse]=\"true\" transform=\"shrink-4\"></fa-icon>\n            </fa-layers>\n            <span class=\"faded\">Block</span> {{block.number}}\n          </h2>\n          <mat-chip-list orientation=\"vertical\">\n            <mat-chip selected *ngIf=\"accountService.libNum > block['number']\">\n              <fa-icon [icon]=\"faLock\" style=\"margin-right: 5px\"></fa-icon>\n              Irreversible\n            </mat-chip>\n            <mat-chip color=\"accent\" selected *ngIf=\"accountService.libNum < block['number']\">\n              <fa-icon [icon]=\"faHourglass\" style=\"margin-right: 5px\"></fa-icon>\n              Pending ({{countdownTimer}}s)\n            </mat-chip>\n          </mat-chip-list>\n        </div>\n      </div>\n      <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"10px\">\n        <div><span class=\"w-500\">Block ID: </span><span class=\"break-word\">{{block.id}}</span></div>\n        <div><span class=\"w-500\">Producer: </span>{{block.producer}}</div>\n        <div><span class=\"w-500\">Time: </span>{{formatDate(block.timestamp)}}</div>\n      </div>\n    </mat-card>\n\n    <mat-card fxFlex=\"100\" fxFlexFill>\n      <h3 style=\"margin-top: 0;\">\n        <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n          <fa-icon [icon]=\"faCircle\" transform=\"grow-3\"></fa-icon>\n          <fa-icon [icon]=\"faHistory\" [inverse]=\"true\" transform=\"shrink-5\"></fa-icon>\n        </fa-layers>\n        {{block.transactions.length}} Transaction<span *ngIf=\"block.transactions.length > 1\">s</span>\n      </h3>\n\n      <table mat-table [dataSource]=\"block.transactions\" class=\"transactions-table\" multiTemplateDataRows>\n\n        <!-- TX ID Column -->\n        <ng-container matColumnDef=\"icon\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let transaction\" data-label=\"Tap to see all actions\">\n            <button mat-icon-button>\n              <fa-icon [icon]=\"expandedElement === transaction ? faChevronDown : faChevronRight\"></fa-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <!-- TX ID Column -->\n        <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef>TX ID</th>\n          <td mat-cell *matCellDef=\"let transaction\" data-label=\"TX ID\">\n            <a [routerLink]=\"['/transaction', transaction.id]\" class=\"link-blue break-word\">{{transaction.id}}</a>\n          </td>\n        </ng-container>\n\n        <!-- Root Action Column -->\n        <ng-container matColumnDef=\"root\">\n          <th mat-header-cell *matHeaderCellDef style=\"padding-left: 10px;\">Root Action</th>\n          <td mat-cell *matCellDef=\"let transaction\" data-label=\"Root Action\">\n          <span class=\"action-cell\" [ngStyle.gt-xs]=\"{'min-width': '170px'}\" [ngClass.gt-sm]=\"'action-border'\">\n            <span class=\"accent w-500\">{{transaction.actions[0].action}}</span>\n            on <span class=\"w-500 div-link\"\n                     [routerLink]=\"['/account', transaction.actions[0].account]\">{{transaction.actions[0].account}}</span>\n          </span>\n          </td>\n        </ng-container>\n\n        <!-- Num Action Column -->\n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef style=\"text-align: center\"># Actions</th>\n          <td mat-cell *matCellDef=\"let transaction\" style=\"text-align: center\" data-label=\"# Actions\">\n            {{transaction['actions'].length}}\n          </td>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n          <td mat-cell *matCellDef=\"let transaction\" [attr.colspan]=\"columnsToDisplay.length\">\n            <div class=\"element-detail\" [@detailExpand]=\"transaction == expandedElement ? 'expanded' : 'collapsed'\">\n              <table mat-table [dataSource]=\"transaction.actions\" class=\"actions-table\">\n\n                <!-- Action Column -->\n                <ng-container matColumnDef=\"action\">\n                  <th mat-header-cell *matHeaderCellDef>Action</th>\n                  <td mat-cell *matCellDef=\"let action\" [ngStyle.gt-xs]=\"{'padding-right': '14px'}\" data-label=\"Action\">\n                  <span>\n                    <span class=\"accent w-500\">{{action.action}}</span>\n                    on <span class=\"w-500 div-link\"\n                             [routerLink]=\"['/account', action.account]\">{{action.account}}</span>\n                    </span>\n                  </td>\n                </ng-container>\n\n                <!-- Data Column -->\n                <ng-container matColumnDef=\"data\">\n                  <th mat-header-cell *matHeaderCellDef> Data</th>\n                  <td mat-cell *matCellDef=\"let action\" [ngStyle.gt-xs]=\"{'padding': '10px 14px 10px 0'}\"\n                      data-label=\"Data\">\n                    <div *ngFor=\"let item of action['data'] | keyvalue\"\n                         [ngClass]=\"{'data-item': objectKeyCount(action['data']) > 1}\">\n                      <span class=\"w-500\">{{item.key}}</span>: <span class=\"break-word\">{{item.value}}</span>\n                    </div>\n                  </td>\n                </ng-container>\n\n                <!-- Authorization Column -->\n                <ng-container matColumnDef=\"auth\">\n                  <th mat-header-cell *matHeaderCellDef>Authorization</th>\n                  <td mat-cell *matCellDef=\"let action\" [ngStyle.gt-xs]=\"{'padding': '10px 0 6px'}\"\n                      data-label=\"Authorization\">\n                    <div *ngFor=\"let auth of action['authorization'][0] | keyvalue\" class=\"data-item\">\n                      <span class=\"w-500\">{{auth.key}}</span>: <span>{{auth.value}}</span>\n                    </div>\n                </ng-container>\n\n                <!--suppress AngularUndefinedBinding -->\n                <tr mat-header-row *matHeaderRowDef=\"columnsInside; sticky: true\"></tr>\n\n                <!--suppress AngularUndefinedBinding -->\n                <tr mat-row *matRowDef=\"let myRowData2; columns: columnsInside\"></tr>\n              </table>\n            </div>\n          </td>\n        </ng-container>\n\n        <!--suppress AngularUndefinedBinding -->\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n\n        <!--suppress AngularUndefinedBinding -->\n        <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\" class=\"element-row\"\n            [class.expanded-row]=\"expandedElement === myRowData\"\n            (click)=\"expandedElement = expandedElement === myRowData ? null : myRowData\">\n        </tr>\n\n        <!--suppress AngularUndefinedBinding -->\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n      </table>\n\n    </mat-card>\n\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {faCircle} from '@fortawesome/free-solid-svg-icons/faCircle';\nimport {faHistory} from '@fortawesome/free-solid-svg-icons/faHistory';\nimport {faUserCircle} from '@fortawesome/free-solid-svg-icons/faUserCircle';\nimport {Subscription} from 'rxjs';\nimport {EvmService} from '../../services/evm.service';\nimport {PageEvent} from '@angular/material/paginator';\nimport {faClock} from '@fortawesome/free-solid-svg-icons/faClock';\nimport {AccountService} from '../../services/account.service';\n\n@Component({\n  selector: 'app-evm-address',\n  templateUrl: './evm-address.component.html',\n  styleUrls: ['./evm-address.component.css']\n})\nexport class EvmAddressComponent implements OnInit, OnDestroy {\n\n  address = '';\n  subs: Subscription[];\n  faUserCircle = faUserCircle;\n  nativeBalance = 0;\n  faCircle = faCircle;\n  faHistory = faHistory;\n  faClock = faClock;\n\n  columnsToDisplay: string[] = [\n    'hash',\n    'block',\n    'fromAddr',\n    'toAddr',\n    'nativeValue'\n  ];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public accountService: AccountService,\n    public evm: EvmService\n  ) {\n    this.subs = [];\n  }\n\n  ngOnInit(): void {\n    this.subs.push(this.activatedRoute.params.subscribe(async (routeParams) => {\n      this.address = routeParams.address;\n      this.nativeBalance = await this.evm.getBalance(this.address);\n      await this.evm.loadTransactions(this.address);\n      await this.accountService.checkIrreversibility();\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(s => s.unsubscribe());\n  }\n\n  formatDate(date: string): string {\n    return new Date(date).toLocaleString();\n  }\n\n  changePage(event: PageEvent): void {\n\n    // disable streaming if enabled\n    if (this.evm.streamClientStatus) {\n      this.evm.toggleStreaming();\n    }\n\n    const maxPages = Math.floor(event.length / event.pageSize);\n    console.log(event);\n    console.log(`${event.pageIndex} / ${maxPages}`);\n    try {\n      if (event.pageIndex === maxPages - 1) {\n        this.evm.loadMoreTransactions(this.address).catch(console.log);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n}\n","<mat-progress-spinner [diameter]=\"45\" *ngIf=\"!evm.loaded\" mode=\"indeterminate\"></mat-progress-spinner>\n\n<div class=\"container\" style=\"height: 100%;\">\n  <div *ngIf=\"evm.loaded\"  fxLayout=\"column\"\n     fxLayoutAlign=\"start stretch\"\n     fxLayoutGap=\"15px\" >\n\n  <mat-card>\n    <h2 style=\"margin-bottom: 0\" class=\"faded\">\n      <fa-icon [icon]=\"faUserCircle\" style=\"margin-right: 5px\"></fa-icon>\n      <span>EVM Address</span>\n    </h2>\n    <h2 class=\"break-word\" style=\"letter-spacing: 1px;\">{{address}}</h2>\n    <div fxLayout=\"column\">\n      <div class=\"total-balance width-100\">\n        <strong>Native Balance: </strong>\n        <span class=\"float-r\">{{nativeBalance}}</span>\n      </div>\n    </div>\n  </mat-card>\n\n  <!-- ACTIONS -->\n  <mat-card fxFlex=\"100\" fxFlexFill>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n      <h3 style=\"margin-top: 0;\">\n        <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n          <fa-icon [icon]=\"faCircle\" transform=\"grow-3\"></fa-icon>\n          <fa-icon [icon]=\"faHistory\" [inverse]=\"true\" transform=\"shrink-5\"></fa-icon>\n        </fa-layers>\n        Transactions\n      </h3>\n\n      <span class=\"lib\">Last Irreversible Block: <strong class=\"monospace\">{{accountService.libNum}}</strong></span>\n\n      <div *ngIf=\"evm.streamClientLoaded\" (click)=\"evm.toggleStreaming()\" class=\"livestream\"\n           matTooltip=\"click to turn on/off\"\n           matTooltipClass=\"tooltip-bigger\">\n        action live streaming <span class=\"w-500\">{{evm.streamClientStatus ? 'enabled' : 'disabled'}}</span>\n        <span class=\"dot\"\n              [ngClass]=\"{'pulse': evm.streamClientStatus, 'red-dot': !evm.streamClientStatus}\"></span>\n      </div>\n    </div>\n\n    <table mat-table [dataSource]=\"evm.addressTransactions\"\n           matSort\n           matSortActive=\"block\"\n           matSortStart=\"desc\"\n           matSortDirection=\"desc\" class=\"actions-table\">\n\n      <ng-container matColumnDef=\"hash\">\n        <th mat-header-cell *matHeaderCellDef [ngStyle.gt-xs]=\"{'min-width': '100px'}\">TX Hash</th>\n        <td mat-cell *matCellDef=\"let trx\" data-label=\"TX\">\n<!--          <span *ngIf=\"evm.libNum < trx['block_num']\"-->\n<!--                matTooltip=\"time until irreversible\" matTooltipClass=\"tooltip-bigger\">-->\n<!--            <fa-icon [icon]=\"faClock\" class=\"accent\" style=\"margin-right: 1px\"></fa-icon>-->\n<!--            {{(trx['block_num'] - evm.libNum) / 2}}s-->\n<!--          </span>-->\n          <a [routerLink]=\"['/evm/transaction', trx['hash']]\" class=\"link-blue monospace\">\n            {{trx['hash'].slice(0,8)}}...{{trx['hash'].slice(-8)}}\n          </a>\n        </td>\n      </ng-container>\n\n\n      <!-- Block & Date Column -->\n      <ng-container matColumnDef=\"block\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header [ngStyle.gt-xs]=\"{'min-width': '70px'}\">Block & Date</th>\n        <td mat-cell *matCellDef=\"let trx\" data-label=\"Block & Date\">\n          <a [routerLink]=\"['/evm/block', trx['evm_block']]\" class=\"link-blue\">{{trx['block_num']}}</a>\n          <br>\n          <span> {{formatDate(trx['@timestamp'])}}</span>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"fromAddr\">\n        <th mat-header-cell *matHeaderCellDef [ngStyle.gt-xs]=\"{'min-width': '100px'}\">From</th>\n        <td mat-cell *matCellDef=\"let trx\" data-label=\"From\">\n          <a *ngIf=\"trx['from']\" [routerLink]=\"['/evm/address', trx['from']]\" class=\"link-blue monospace\">\n            {{trx['from'].slice(0,8)}}...{{trx['from'].slice(-8)}}\n          </a>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"toAddr\">\n        <th mat-header-cell *matHeaderCellDef [ngStyle.gt-xs]=\"{'min-width': '100px'}\">To</th>\n        <td mat-cell *matCellDef=\"let trx\" data-label=\"To\">\n          <a *ngIf=\"trx['to']\" [routerLink]=\"['/evm/address', trx['to']]\" class=\"link-blue monospace\">\n            {{trx['to'].slice(0,8)}}...{{trx['to'].slice(-8)}}\n          </a>\n          <a *ngIf=\"!trx['to']\" class=\"monospace\">\n            0x0\n          </a>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"nativeValue\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header [ngStyle.gt-xs]=\"{'min-width': '100px'}\">Value</th>\n        <td mat-cell *matCellDef=\"let trx\" data-label=\"Value\">\n          {{trx['val_formatted']}}\n        </td>\n      </ng-container>\n\n      <!--suppress AngularUndefinedBinding -->\n      <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n\n      <!--suppress AngularUndefinedBinding -->\n      <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\"\n                   [length]=\"evm.addressTransactions.filteredData.length\"\n                   (page)=\"changePage($event)\"\n                   showFirstLastButtons>\n    </mat-paginator>\n\n    <button mat-stroked-button color=\"primary\" class=\"float-r\" style=\"margin-right: 16px;\"\n            (click)=\"evm.loadMoreTransactions(address)\">\n      load more actions\n    </button>\n  </mat-card>\n\n</div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {EvmService} from '../../services/evm.service';\nimport {faCube} from '@fortawesome/free-solid-svg-icons/faCube';\nimport {faHourglassStart} from '@fortawesome/free-solid-svg-icons/faHourglassStart';\nimport {faCircle} from '@fortawesome/free-solid-svg-icons/faCircle';\nimport {faLock} from '@fortawesome/free-solid-svg-icons/faLock';\nimport {faHistory} from '@fortawesome/free-solid-svg-icons/faHistory';\nimport {faSadTear} from '@fortawesome/free-solid-svg-icons/faSadTear';\nimport {Subscription} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\nimport {AccountService} from '../../services/account.service';\n\n@Component({\n  selector: 'app-evm-block',\n  templateUrl: './evm-block.component.html',\n  styleUrls: ['./evm-block.component.css']\n})\nexport class EvmBlockComponent implements OnInit, OnDestroy {\n  faCircle = faCircle;\n  faBlock = faCube;\n  faLock = faLock;\n  faHourglass = faHourglassStart;\n  faHistory = faHistory;\n  faSadTear = faSadTear;\n\n  txData: any = {\n    hash: '0xaef244314c42bdc2d62bfaa82880049dafa958ae4e4ce8a0ae8b94598ff1549a',\n    block_num: 23232,\n    block: 23229,\n    '@timestamp': Date.now(),\n    from: '0x5fe25eec20614b9a9109c1a31a9959b467e0df85',\n    to: '0x292f04a44506c2fd49bac032e1ca148c35a478c8',\n    value: '',\n    fee: '',\n    gas_price: '',\n    gas_limit: '',\n    gas_used: '',\n    nonce: 0,\n    input_data: '',\n  };\n\n  blockData = {\n    block: 292823,\n    block_hash: '0x25472228743439862758372832',\n    transactions: [this.txData, this.txData]\n  };\n\n  subs: Subscription[];\n  blockNumber = '';\n\n  columnsToDisplay: string[] = [\n    'hash',\n    'fromAddr',\n    'toAddr',\n    'nativeValue'\n  ];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public accountService: AccountService,\n    public evm: EvmService\n  ) {\n    this.subs = [];\n  }\n\n  ngOnInit(): void {\n    this.subs.push(this.activatedRoute.params.subscribe(async (routeParams) => {\n      this.blockNumber = routeParams.block_num;\n      await this.evm.loadBlock(this.blockNumber);\n      await this.accountService.checkIrreversibility();\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(s => s.unsubscribe());\n  }\n\n}\n","<mat-progress-spinner [diameter]=\"45\" *ngIf=\"!evm.loaded\" mode=\"indeterminate\"></mat-progress-spinner>\n\n<div class=\"container\" style=\"height: 100%;\">\n  <div *ngIf=\"false && evm.loaded\" fxLayout=\"column\" style=\"height: 100%\">\n    <mat-card>\n      <h1 class=\"faded\">\n        <fa-icon [icon]=\"faSadTear\" style=\"margin-right: 5px\"></fa-icon>\n        Block not found\n      </h1>\n<!--      <div>We couldn't find block <strong>{{blockNum}}</strong></div>-->\n    </mat-card>\n  </div>\n\n\n  <div *ngIf=\"evm.loaded\"  fxLayout=\"column\"\n       fxLayoutAlign=\"start stretch\"\n       fxLayoutGap=\"15px\" >\n\n    <mat-card>\n      <h2>\n        <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n          <fa-icon [icon]=\"faCircle\" transform=\"grow-1\"></fa-icon>\n          <fa-icon [icon]=\"faBlock\" [inverse]=\"true\" transform=\"shrink-4\"></fa-icon>\n        </fa-layers>\n        <span class=\"faded\">EVM Block</span> {{blockNumber}}\n      </h2>\n    </mat-card>\n\n    <!-- ACTIONS -->\n    <mat-card fxFlex=\"100\" fxFlexFill>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n        <h3 style=\"margin-top: 0;\">\n          <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n            <fa-icon [icon]=\"faCircle\" transform=\"grow-3\"></fa-icon>\n            <fa-icon [icon]=\"faHistory\" [inverse]=\"true\" transform=\"shrink-5\"></fa-icon>\n          </fa-layers>\n          Transactions\n        </h3>\n\n        <span class=\"lib\">Last Irreversible Block: <strong class=\"monospace\">{{accountService.libNum}}</strong></span>\n\n        <div *ngIf=\"evm.streamClientLoaded\" (click)=\"evm.toggleStreaming()\" class=\"livestream\"\n             matTooltip=\"click to turn on/off\"\n             matTooltipClass=\"tooltip-bigger\">\n          action live streaming <span class=\"w-500\">{{evm.streamClientStatus ? 'enabled' : 'disabled'}}</span>\n          <span class=\"dot\"\n                [ngClass]=\"{'pulse': evm.streamClientStatus, 'red-dot': !evm.streamClientStatus}\"></span>\n        </div>\n      </div>\n\n      <table mat-table [dataSource]=\"evm.blockTransactions\" class=\"actions-table\">\n        <ng-container matColumnDef=\"hash\">\n          <th mat-header-cell *matHeaderCellDef [ngStyle.gt-xs]=\"{'min-width': '100px'}\">TX Hash</th>\n          <td mat-cell *matCellDef=\"let trx\" data-label=\"TX\">\n            <a [routerLink]=\"['/evm/transaction', trx['hash']]\" class=\"link-blue monospace\">\n              {{trx['hash'].slice(0,8)}}...{{trx['hash'].slice(-8)}}\n            </a>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fromAddr\">\n          <th mat-header-cell *matHeaderCellDef [ngStyle.gt-xs]=\"{'min-width': '100px'}\">From</th>\n          <td mat-cell *matCellDef=\"let trx\" data-label=\"From\">\n            <a *ngIf=\"trx['from']\" [routerLink]=\"['/evm/address', trx['from']]\" class=\"link-blue monospace\">\n              {{trx['from'].slice(0,8)}}...{{trx['from'].slice(-8)}}\n            </a>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"toAddr\">\n          <th mat-header-cell *matHeaderCellDef [ngStyle.gt-xs]=\"{'min-width': '100px'}\">To</th>\n          <td mat-cell *matCellDef=\"let trx\" data-label=\"To\">\n            <a *ngIf=\"trx['to']\" [routerLink]=\"['/evm/address', trx['to']]\" class=\"link-blue monospace\">\n              {{trx['to'].slice(0,8)}}...{{trx['to'].slice(-8)}}\n            </a>\n            <a *ngIf=\"!trx['to']\" class=\"monospace\">\n              0x0\n            </a>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"nativeValue\">\n          <th mat-header-cell *matHeaderCellDef [ngStyle.gt-xs]=\"{'min-width': '100px'}\">Value</th>\n          <td mat-cell *matCellDef=\"let trx\" data-label=\"Value\">\n            {{trx['val_formatted']}}\n          </td>\n        </ng-container>\n\n        <!--suppress AngularUndefinedBinding -->\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n        <!--suppress AngularUndefinedBinding -->\n        <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n      </table>\n    </mat-card>\n\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {EvmService} from '../../services/evm.service';\nimport {faExchangeAlt} from '@fortawesome/free-solid-svg-icons/faExchangeAlt';\nimport {faSadTear} from '@fortawesome/free-solid-svg-icons/faSadTear';\nimport {faCircle} from '@fortawesome/free-solid-svg-icons/faCircle';\nimport {faHourglassStart} from '@fortawesome/free-solid-svg-icons/faHourglassStart';\nimport {faLock} from '@fortawesome/free-solid-svg-icons/faLock';\nimport {Subscription} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\nimport {BigInteger} from '@angular/compiler/src/i18n/big_integer';\nimport {AccountService} from '../../services/account.service';\n\n@Component({\n  selector: 'app-evm-transaction',\n  templateUrl: './evm-transaction.component.html',\n  styleUrls: ['./evm-transaction.component.css']\n})\nexport class EvmTransactionComponent implements OnInit, OnDestroy {\n  faSadTear = faSadTear;\n  faExchange = faExchangeAlt;\n  faCircle = faCircle;\n  faLock = faLock;\n  faHourglass = faHourglassStart;\n\n  txHash = '';\n\n  txData: any = {\n    hash: '0xaef244314c42bdc2d62bfaa82880049dafa958ae4e4ce8a0ae8b94598ff1549a',\n    block_num: 0,\n    block: 0,\n    timestamp: '',\n    from: '',\n    to: '',\n    value: 0,\n    gas_price: '',\n    gas_used: '',\n    nonce: 0,\n    input_data: '',\n    logs: [],\n    errors: '',\n    status: '',\n    trace: []\n  };\n\n  subs: Subscription[];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public accountService: AccountService,\n    public evm: EvmService\n  ) {\n    this.subs = [];\n  }\n\n  ngOnInit(): void {\n    this.subs.push(this.activatedRoute.params.subscribe(async (routeParams) => {\n      this.txHash = routeParams.hash;\n      const [hash, receipt, trace] = await Promise.all([this.evm.getTransactionByHash(this.txHash), this.evm.getTransactionReceipt(this.txHash), this.evm.traceTransaction(this.txHash)]);\n      const txData = Object.assign(hash, receipt, { trace });\n      console.log({txData});\n      this.txData.block = parseInt(txData.blockNumber, 16);\n      this.txData.from = txData.from;\n      this.txData.timestamp = txData.timestamp || Date.now();\n      this.txData.to = txData.to;\n      this.txData.value = parseInt(txData.value, 16);\n      this.txData.val_formatted = `${(this.txData.value / 1000000000000000000).toFixed(4)} TLOS`\n      this.txData.nonce = parseInt(txData.nonce, 16);\n      this.txData.gas_price = parseInt(txData.gasPrice, 16);\n      this.txData.gas_used = parseInt(txData.gasUsed, 16);\n      this.txData.gas = parseInt(txData.gas, 16);\n      this.txData.input_data = txData.input;\n      this.txData.logs = txData.logs;\n      this.txData.error = this.evm.getErrorFromOutput(txData.output);\n      this.txData.status = txData.status;\n      this.txData.output = txData.output;\n      this.txData.trace = txData.trace;\n      await this.accountService.checkIrreversibility();\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach(s => s.unsubscribe());\n  }\n\n  formatDate(date: string): string {\n    return new Date(date).toLocaleString();\n  }\n\n}\n","<mat-progress-spinner [diameter]=\"45\" *ngIf=\"!evm.loaded\" mode=\"indeterminate\"></mat-progress-spinner>\n\n<div class=\"container\">\n  <div *ngIf=\"false\" fxLayout=\"column\"\n       style=\"height: calc(100vh - 209px);\" fxLayoutAlign=\"start center\">\n    <mat-card style=\"width: 100%;\">\n      <h1 class=\"faded\">\n        <fa-icon [icon]=\"faSadTear\" style=\"margin-right: 5px\"></fa-icon>\n        Transaction not found\n      </h1>\n      <div>We couldn't find the transaction <strong class=\"break-word\">{{txData.hash}}</strong></div>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"true && evm.loaded\" fxLayout=\"column\"\n       fxLayoutAlign=\"start center\"\n       fxLayoutGap=\"15px\">\n    <mat-card fxFlex=\"100\" fxFlexFill>\n      <div style=\"border-bottom: 1px solid #e4e4e4; margin-bottom: 12px;\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n          <h2 style=\"margin-bottom: -15px; margin-top: 0; margin-right: 10px\" class=\"faded\">\n            <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 2px\">\n              <fa-icon [icon]=\"faCircle\" transform=\"grow-1\"></fa-icon>\n              <fa-icon [icon]=\"faExchange\" [inverse]=\"true\" transform=\"shrink-4\"></fa-icon>\n            </fa-layers>\n            EVM Transaction\n          </h2>\n          <mat-chip-list orientation=\"vertical\">\n            <mat-chip *ngIf=\"accountService.libNum > txData.block_num\" selected>\n              <fa-icon [icon]=\"faLock\" style=\"margin-right: 5px\"></fa-icon>\n              Irreversible\n            </mat-chip>\n            <mat-chip *ngIf=\"accountService.libNum < txData.block_num\" color=\"accent\" selected>\n              <fa-icon [icon]=\"faHourglass\" style=\"margin-right: 5px\"></fa-icon>\n              <!--              Pending ({{countdownTimer}}s)-->\n            </mat-chip>\n          </mat-chip-list>\n        </div>\n        <h2 style=\"margin: 10px 0 12px 0;\" class=\"break-word\">{{txData.hash}}</h2>\n      </div>\n      <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"15px\">\n        <div>\n          <strong>Block Number:</strong>\n          <span class=\"monospace\">&nbsp;</span>\n          <a [routerLink]=\"['/evm/block', txData.block]\" class=\"link-blue\">{{txData.block}}</a>\n        </div>\n        <div>\n          <strong>Block Timestamp:</strong>\n          <span class=\"monospace\">&nbsp;</span>\n          {{formatDate(txData.timestamp)}}\n        </div>\n\n        <div>\n          <strong>To:</strong>\n          <span class=\"monospace\">&nbsp;&nbsp;&nbsp;</span>\n          <a class=\"link-blue break-word monospace\" [routerLink]=\"['/evm/address', txData.to]\">{{txData.to}}</a>\n        </div>\n\n        <div>\n          <strong>From:</strong>\n          <span class=\"monospace\">&nbsp;</span>\n          <a class=\"link-blue break-word monospace\" [routerLink]=\"['/evm/address', txData.from]\">{{txData.from}}</a>\n        </div>\n\n        <div><strong>Value:</strong> {{txData.val_formatted}}</div>\n\n        <div><strong>Gas Price:</strong> {{txData.gas_price}}</div>\n\n        <div><strong>Gas Used:</strong> {{txData.gas_used}}</div>\n\n        <div><strong>Gas Limit:</strong> {{txData.gas}}</div>\n\n        <div><strong>Nonce:</strong> {{txData.nonce}}</div>\n\n        <div>\n          <strong>Input Data:</strong>\n          <br>\n          <span class=\"break-word monospace\">{{txData.input_data}}</span>\n        </div>\n\n        <div>\n          <strong>Output Data:</strong>\n          <br>\n          <span class=\"break-word monospace\">{{txData.output}}</span>\n        </div>\n\n\n        <div><strong>Status:</strong> {{txData.status}}</div>\n\n        <div *ngIf=\"txData.errors\"><strong>Error:</strong> {{txData.errors}}</div>\n\n        <div><strong>Logs:</strong></div>\n        <ngx-json-viewer [json]=\"txData.logs\" [expanded]=\"false\"></ngx-json-viewer>\n        <div><strong>Trace:</strong></div>\n        <ngx-json-viewer [json]=\"txData.trace\" [expanded]=\"false\"></ngx-json-viewer>\n      </div>\n    </mat-card>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AccountService} from '../../services/account.service';\nimport {ChainService} from '../../services/chain.service';\nimport {Title} from '@angular/platform-browser';\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons/faSpinner';\nimport {faSadTear} from '@fortawesome/free-solid-svg-icons/faSadTear';\nimport {faKey} from '@fortawesome/free-solid-svg-icons/faKey';\nimport {faCircle} from '@fortawesome/free-solid-svg-icons/faCircle';\n\ninterface KeyResponse {\n  account_names: string[];\n  permissions: any[];\n}\n\n@Component({\n  selector: 'app-key',\n  templateUrl: './key.component.html',\n  styleUrls: ['./key.component.css']\n})\nexport class KeyComponent implements OnInit {\n  key: KeyResponse = {\n    account_names: null,\n    permissions: null\n  };\n  pubKey: string;\n  faCircle = faCircle;\n  faKey = faKey;\n  faSadTear = faSadTear;\n  faSpinner = faSpinner;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              public accountService: AccountService,\n              public chainData: ChainService,\n              private title: Title) {\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(async (routeParams) => {\n      this.pubKey = routeParams.key;\n      this.key = await this.accountService.loadPubKey(routeParams.key) as KeyResponse;\n\n      if (!this.chainData.chainInfoData.chain_name) {\n        this.title.setTitle(`🔑 ${routeParams.key.slice(0, 12)} • Hyperion Explorer`);\n      } else {\n        this.title.setTitle(`🔑 ${routeParams.key.slice(0, 12)} • ${this.chainData.chainInfoData.chain_name} Hyperion Explorer`);\n      }\n\n    });\n  }\n\n}\n","<mat-progress-spinner [diameter]=\"45\" *ngIf=\"!accountService.loaded\" mode=\"indeterminate\"></mat-progress-spinner>\n\n<div class=\"container\">\n  <div *ngIf=\"key.account_names && key.account_names.length === 0 && accountService.loaded\"\n       fxLayout=\"column\" style=\"height: 100%\" fxLayoutAlign=\"start center\">\n    <mat-card style=\"width: 100%;\">\n      <h1 class=\"faded\">\n        <fa-icon [icon]=\"faSadTear\" style=\"margin-right: 5px\"></fa-icon>\n        Key not found\n      </h1>\n      <div>We couldn't find the key <strong class=\"break-word\">{{pubKey}}</strong></div>\n    </mat-card>\n  </div>\n  <div *ngIf=\"key.account_names && key.account_names.length > 0 && accountService.loaded\"\n       fxLayout=\"column\" fxLayoutAlign=\"start center\" fxLayoutGap=\"15px\">\n    <mat-card fxFlex=\"100\" fxFlexFill>\n      <div style=\"border-bottom: 1px solid #e4e4e4; margin-bottom: 12px;\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n          <h2 style=\"margin-bottom: -15px; color: #9c9c9c; margin-top: 0; margin-right: 10px\">\n            <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 2px\">\n              <fa-icon [icon]=\"faCircle\" transform=\"grow-1\"></fa-icon>\n              <fa-icon [icon]=\"faKey\" [inverse]=\"true\" transform=\"shrink-4\"></fa-icon>\n            </fa-layers>\n            Public Key\n          </h2>\n        </div>\n        <h4 style=\"margin: 27px 0 12px 0;\" class=\"break-word\">{{pubKey}}</h4>\n      </div>\n      <div>\n        <h4 style=\"font-weight: 500\">Associated accounts:</h4>\n        <ng-container *ngIf=\"key.permissions.length > 0\">\n          <div *ngFor=\"let acc of key.permissions\" class=\"account-cell\">\n            <a [routerLink]=\"['/account', acc['owner']]\">{{acc['owner']}}</a>\n            <span class=\"permission\">{{acc.name}}</span>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"key.permissions.length === 0\">\n          <div *ngFor=\"let acc of key.account_names\" class=\"account-cell\">\n            <a [routerLink]=\"['/account', acc]\">{{acc}}</a>\n          </div>\n        </ng-container>\n      </div>\n    </mat-card>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {debounceTime} from 'rxjs/operators';\nimport {SearchService} from '../services/search.service';\nimport {AccountService} from '../services/account.service';\nimport {faSearch} from '@fortawesome/free-solid-svg-icons/faSearch';\nimport {ChainService} from '../services/chain.service';\nimport { LaunchDarklyService } from 'src/app/services/launch-darkly/launch-darkly.service';\nimport { FeatureFlagName } from 'src/app/services/launch-darkly/featureFlags';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.css']\n})\nexport class SearchResultsComponent implements OnInit {\n  searchForm: FormGroup;\n  filteredAccounts: string[];\n  faSearch = faSearch;\n  searchPlaceholder: string;\n  featureFlagClient: LaunchDarklyService;\n  isQueryingByBlockNumberEnabled: boolean;\n  placeholders = [\n    'Search by account name...',\n    'Search by transaction id...',\n    'Search by public key...'\n  ];\n  err = '';\n  private currentPlaceholder = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private accountService: AccountService,\n    private searchService: SearchService,\n    public chainData: ChainService\n  ) {\n    this.searchForm = this.formBuilder.group({\n      search_field: ['']\n    });\n    this.filteredAccounts = [];\n\n    this.searchPlaceholder = this.placeholders[0];\n    this.featureFlagClient = new LaunchDarklyService();\n    setInterval(() => {\n      this.currentPlaceholder++;\n      if (!this.placeholders[this.currentPlaceholder]) {\n        this.currentPlaceholder = 0;\n      }\n      this.searchPlaceholder = this.placeholders[this.currentPlaceholder];\n    }, 3000);\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.searchForm.get('search_field').valueChanges.pipe(debounceTime(300)).subscribe(async (result) => {\n      this.filteredAccounts = await this.searchService.filterAccountNames(result);\n    });\n    this.isQueryingByBlockNumberEnabled = false\n      // await this.featureFlagClient.variation(\n      //   FeatureFlagName.IsQueryingByBlockNumberEnabled\n      // );\n    if (this.isQueryingByBlockNumberEnabled) {\n      this.placeholders.push('Search by block number...');\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    if (!this.searchForm.valid) {\n      return true;\n    }\n    const searchText = this.searchForm.get('search_field').value;\n    const status = this.searchService.submitSearch(searchText, this.filteredAccounts);\n    if (!status) {\n      this.err = 'no results for ' + searchText;\n    }\n    return false;\n  }\n\n}\n","<div style=\"height: 100vh\" fxLayout=\"column\" fxLayoutGap=\"10px\"\n     class=\"user-pages\">\n  <mat-card class=\"search-card\">\n    <div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" style=\"padding: 0; width: 100%;\">\n      <img [fxHide.lt-sm]=\"true\" src=\"assets/logo.png\" alt=\"logo\" style=\"height: 80px\" routerLink=\"/\" class=\"logo\">\n      <img [fxHide.gt-xs]=\"true\" src=\"assets/logo_symbol.png\" alt=\"logo\" style=\"height: 80px;\" routerLink=\"/\"\n           class=\"logo\">\n      <div class=\"search-container\">\n        <div class=\"chain\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"6px\">\n          <span>Connected to</span>\n          <span class=\"outline\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"5px\">\n          <img [src]=\"chainData.chainInfoData.logo\" alt=\"logo\" style=\"height: 23px\">\n          <span>{{chainData.chainInfoData.chain_name}}</span>\n        </span>\n        </div>\n        <form [formGroup]=\"searchForm\" (ngSubmit)=\"submit()\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"center stretch\">\n\n            <div fxLayout=\"column\">\n              <mat-form-field appearance=\"outline\" class=\"search-input\" style=\"height: 100%\" fxFlex=\"grow\">\n                <label>\n                  <input matInput formControlName=\"search_field\" [matAutocomplete]=\"auto\"\n                         [placeholder]=\"searchPlaceholder\">\n                </label>\n                <mat-error *ngIf=\"err\">{{err}}</mat-error>\n              </mat-form-field>\n            </div>\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"submit()\">\n              <mat-option *ngFor=\"let account of filteredAccounts\" [value]=\"account\">{{account}}</mat-option>\n            </mat-autocomplete>\n            <button mat-stroked-button matSuffix type=\"submit\" [attr.aria-label]=\"'search'\" class=\"search-btn\"\n                    (keyup.enter)=\"submit()\">\n              <fa-icon [icon]=\"faSearch\"></fa-icon>\n            </button>\n          </div>\n        </form>\n        <!--      <div>-->\n        <!--        <div style=\"margin-bottom: 10px;\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"6px\">-->\n        <!--          <span>Connected to</span>-->\n        <!--          <span class=\"outline\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"5px\">-->\n        <!--            <img [src]=\"chainData.chainInfoData.logo\" alt=\"logo\" style=\"height: 28px\">-->\n        <!--            <span>{{chainData.chainInfoData.chain_name}}</span>-->\n        <!--          </span>-->\n        <!--        </div>-->\n        <!--        <div>Provided by <a [href]=\"chainData.chainInfoData.provider_url\" target=\"_blank\">{{chainData.chainInfoData.provider}}</a>-->\n        <!--        </div>-->\n        <!--      </div>-->\n      </div>\n    </div>\n  </mat-card>\n\n  <div fxFlex=\"grow\" class=\"user-page\" fxLayout=\"column\">\n    <router-outlet></router-outlet>\n    <div class=\"faded footer-text\">\n      <div style=\"margin-bottom: 7px\">Data provider <a [href]=\"chainData.chainInfoData.provider_url\"\n                                                       target=\"_blank\">{{chainData.chainInfoData.provider}}</a>\n      </div>\n      <div>Made with ❤ by EOS Rio</div>\n    </div>\n  </div>\n\n\n</div>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AccountService} from '../../services/account.service';\nimport {faExchangeAlt} from '@fortawesome/free-solid-svg-icons/faExchangeAlt';\nimport {faCircle} from '@fortawesome/free-solid-svg-icons/faCircle';\nimport {faLock} from '@fortawesome/free-solid-svg-icons/faLock';\nimport {faHourglassStart} from '@fortawesome/free-solid-svg-icons/faHourglassStart';\nimport {faHistory} from '@fortawesome/free-solid-svg-icons/faHistory';\nimport {faSadTear} from '@fortawesome/free-solid-svg-icons/faSadTear';\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons/faSpinner';\nimport {ChainService} from '../../services/chain.service';\nimport {Title} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit, OnDestroy {\n  columnsToDisplay: string[] = ['contract', 'action', 'data', 'auth'];\n  tx: any = {\n    actions: null\n  };\n  faCircle = faCircle;\n  faExchange = faExchangeAlt;\n  faLock = faLock;\n  faHourglass = faHourglassStart;\n  faHistory = faHistory;\n  faSadTear = faSadTear;\n  faSpinner = faSpinner;\n  txID: string;\n  countdownLoop: any;\n  countdownTimer = 0;\n\n  objectKeyCount(obj): number {\n    try {\n      return Object.keys(obj).length;\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  constructor(private activatedRoute: ActivatedRoute,\n              public accountService: AccountService,\n              public chainData: ChainService,\n              private title: Title) {\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(async (routeParams) => {\n      this.txID = routeParams.transaction_id;\n      this.tx = await this.accountService.loadTxData(routeParams.transaction_id);\n\n      if (!this.chainData.chainInfoData.chain_name) {\n        this.title.setTitle(`TX ${routeParams.transaction_id.slice(0, 8)} • Hyperion Explorer`);\n      } else {\n        this.title.setTitle(`TX ${routeParams.transaction_id.slice(0, 8)} • ${this.chainData.chainInfoData.chain_name} Hyperion Explorer`);\n      }\n\n      this.accountService.libNum = this.tx.lib;\n      if (this.tx.actions[0].block_num > this.tx.lib) {\n        await this.reloadCountdownTimer();\n        this.countdownLoop = setInterval(async () => {\n          this.countdownTimer--;\n          if (this.countdownTimer <= 0) {\n            await this.reloadCountdownTimer();\n            if (this.accountService.libNum > this.tx.actions[0].block_num) {\n              clearInterval(this.countdownLoop);\n            }\n          }\n        }, 1000);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.countdownLoop) {\n      clearInterval(this.countdownLoop);\n    }\n  }\n\n  formatDate(date: string): string {\n    return new Date(date).toLocaleString();\n  }\n\n  stringifyObject(subitem: object): string {\n    return JSON.stringify(subitem, null, 2);\n}\n\n  async reloadCountdownTimer(): Promise<void> {\n    await this.accountService.updateLib();\n    this.countdownTimer = Math.ceil((this.tx.actions[0].block_num - this.accountService.libNum) / 2);\n  }\n}\n","<mat-progress-spinner [diameter]=\"45\" *ngIf=\"!accountService.loaded\" mode=\"indeterminate\"></mat-progress-spinner>\n\n<div class=\"container\">\n  <div *ngIf=\"tx.actions && tx.actions.length === 0\" fxLayout=\"column\"\n       style=\"height: calc(100vh - 209px);\" fxLayoutAlign=\"start center\">\n    <mat-card style=\"width: 100%;\">\n      <h1 class=\"faded\">\n        <fa-icon [icon]=\"faSadTear\" style=\"margin-right: 5px\"></fa-icon>\n        Transaction not found\n      </h1>\n      <div>We couldn't find the transaction <strong class=\"break-word\">{{txID}}</strong></div>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"tx.actions && tx.actions.length > 0 && accountService.loaded\" fxLayout=\"column\"\n       fxLayoutAlign=\"start center\"\n       fxLayoutGap=\"15px\">\n    <mat-card fxFlex=\"100\" fxFlexFill>\n      <div style=\"border-bottom: 1px solid #e4e4e4; margin-bottom: 12px;\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n          <h2 style=\"margin-bottom: -15px; color: #9c9c9c; margin-top: 0; margin-right: 10px\">\n            <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 2px\">\n              <fa-icon [icon]=\"faCircle\" transform=\"grow-1\"></fa-icon>\n              <fa-icon [icon]=\"faExchange\" [inverse]=\"true\" transform=\"shrink-4\"></fa-icon>\n            </fa-layers>\n            Transaction\n          </h2>\n          <mat-chip-list orientation=\"vertical\">\n            <mat-chip *ngIf=\"accountService.libNum > tx.actions[0]['block_num']\" selected>\n              <fa-icon [icon]=\"faLock\" style=\"margin-right: 5px\"></fa-icon>\n              Irreversible\n            </mat-chip>\n            <mat-chip *ngIf=\"accountService.libNum < tx.actions[0]['block_num']\" color=\"accent\" selected>\n              <fa-icon [icon]=\"faHourglass\" style=\"margin-right: 5px\"></fa-icon>\n              Pending ({{countdownTimer}}s)\n            </mat-chip>\n          </mat-chip-list>\n        </div>\n        <h4 style=\"margin: 10px 0 12px 0;\" class=\"break-word\">{{tx.trx_id}}</h4>\n      </div>\n      <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"15px\">\n        <div>Block num: <a [routerLink]=\"['/block', tx.actions[0].block_num]\"\n                           class=\"link-blue\">{{tx.actions[0].block_num}}</a></div>\n        <div>Block time: {{formatDate(tx.actions[0]['@timestamp'])}}</div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"50px\">\n          <div>\n            <div>\n              <span class=\"title\">CPU</span>\n              <span class=\"faded used\">usage</span>\n            </div>\n            <div>{{tx.actions[0]['cpu_usage_us']}} µs</div>\n          </div>\n          <div>\n            <div>\n              <span class=\"title\">NET</span>\n              <span class=\"faded used\">usage</span>\n            </div>\n            <div>{{tx.actions[0]['net_usage_words']}} bytes</div>\n          </div>\n        </div>\n      </div>\n    </mat-card>\n\n    <mat-card fxFlex=\"100\" fxFlexFill>\n      <h3 style=\"margin-top: 0;\">\n        <fa-layers [fixedWidth]=\"true\" style=\"margin-right: 5px\">\n          <fa-icon [icon]=\"faCircle\" transform=\"grow-3\"></fa-icon>\n          <fa-icon [icon]=\"faHistory\" [inverse]=\"true\" transform=\"shrink-5\"></fa-icon>\n        </fa-layers>\n        {{tx.actions.length}} Action<span *ngIf=\"tx.actions.length > 1\">s</span>\n      </h3>\n      <table mat-table [dataSource]=\"tx.actions\" class=\"actions-table\">\n\n        <!-- Contract Column -->\n        <ng-container matColumnDef=\"contract\">\n          <th mat-header-cell *matHeaderCellDef> Contract</th>\n          <td mat-cell *matCellDef=\"let action\" data-label=\"Contract\">\n            <span [routerLink]=\"['/account', action.act.account]\" class=\"div-link\">{{action.act.account}}</span>\n          </td>\n        </ng-container>\n\n        <!-- Action Column -->\n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef [ngStyle.gt-xs]=\"{'padding-left': '14px', 'padding-right':'14px'}\">\n            Action\n          </th>\n          <td mat-cell *matCellDef=\"let action\" data-label=\"Action\"\n              [ngStyle.gt-xs]=\"{'padding-left': '14px', 'padding-right':'14px'}\">\n            <span class=\"accent w-500\">{{action.act.name}}</span>\n          </td>\n        </ng-container>\n\n        <!-- Data Column -->\n        <ng-container matColumnDef=\"data\">\n          <th mat-header-cell *matHeaderCellDef> Data</th>\n          <td mat-cell *matCellDef=\"let action\" [ngStyle.gt-xs]=\"{'padding': '10px 0 6px'}\" data-label=\"Data\">\n            <div *ngFor=\"let item of action['act']['data'] | keyvalue\"\n                 [ngClass]=\"{'data-item': objectKeyCount(action['act']['data']) > 1}\">\n              <span class=\"w-500\">{{item.key}}</span>: <span class=\"break-word\">{{stringifyObject(item.value)}}</span>\n            </div>\n          </td>\n        </ng-container>\n\n        <!-- Authorization Column -->\n        <ng-container matColumnDef=\"auth\">\n          <th mat-header-cell *matHeaderCellDef>Authorization</th>\n          <td mat-cell *matCellDef=\"let action\" [ngStyle.gt-xs]=\"{'padding': '10px 70px 6px'}\" data-label=\"Authorization\">\n            <div *ngFor=\"let auth of action['act']['authorization'][0] | keyvalue\" class=\"data-item\">\n              <span class=\"w-500\">{{auth.key}}</span>: <span>{{auth.value}}</span>\n            </div>\n        </ng-container>\n\n        <!--suppress AngularUndefinedBinding -->\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n\n        <!--suppress AngularUndefinedBinding -->\n        <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n      </table>\n\n    </mat-card>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {AccountCreationData, GetAccountResponse} from '../interfaces';\nimport {default as HyperionStreamClient, IncomingData} from '@eosrio/hyperion-stream-client';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {PaginationService} from './pagination.service';\n\ninterface HealthResponse {\n  features: {\n    streaming: {\n      deltas: boolean;\n      enable: boolean;\n      traces: boolean;\n    }\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  getAccountUrl: string;\n  getActionsUrl: string;\n  getCreatorUrl: string;\n  getTxUrl: string;\n  getBlockUrl: string;\n  getKeyUrl: string;\n  jsonData: any;\n  account: any = {\n    cpu_limit: {\n      used: 1,\n      max: 1\n    },\n    net_limit: {\n      used: 1,\n      max: 1\n    }\n  };\n  actions: any[] = [];\n  tokens: any[] = [];\n  public tableDataSource: MatTableDataSource<any[]>;\n  streamClient: HyperionStreamClient;\n  public streamClientStatus = false;\n  public libNum: any;\n  private server: string;\n  private verificationLoop: any;\n  private predictionLoop: any;\n  private pendingSet = new Set();\n  public loaded = false;\n  public streamClientLoaded = false;\n\n  constructor(private httpClient: HttpClient, private pagService: PaginationService) {\n    this.getServerUrl();\n    this.getAccountUrl = environment.hyperionApiUrl + '/v2/state/get_account?account=';\n    this.getActionsUrl = environment.hyperionApiUrl + '/v2/history/get_actions?account=';\n    this.getCreatorUrl = environment.hyperionApiUrl + '/v2/history/get_creator?account=';\n    this.getTxUrl = environment.hyperionApiUrl + '/v2/history/get_transaction?id=';\n    this.getBlockUrl = environment.hyperionApiUrl + '/v1/trace_api/get_block';\n    this.getKeyUrl = environment.hyperionApiUrl + '/v2/state/get_key_accounts?public_key=';\n    this.tableDataSource = new MatTableDataSource([]);\n    // this.initStreamClient().catch(console.log);\n  }\n\n  async monitorLib(): Promise<void> {\n    console.log('Starting LIB monitoring...');\n\n    if (!this.verificationLoop) {\n      this.verificationLoop = setInterval(async () => {\n        await this.updateLib();\n      }, 21 * 12 * 500);\n    }\n\n    if (!this.predictionLoop) {\n      this.predictionLoop = setInterval(() => {\n        this.libNum += 12;\n        if (this.pendingSet.size > 0) {\n          this.pendingSet.forEach(async (value) => {\n            if (value < this.libNum) {\n              console.log(`Block cleared ${value} < ${this.libNum}`);\n              this.pendingSet.delete(value);\n            }\n          });\n        } else {\n          console.log('No more pending actions, clearing loops');\n          this.clearLoops();\n        }\n      }, 12 * 500);\n    }\n\n  }\n\n  async checkIrreversibility(): Promise<void> {\n    this.libNum = await this.checkLib();\n    if (this.libNum) {\n      let counter = 0;\n      for (const action of this.actions) {\n        if (action.block_num <= this.libNum) {\n          action.irreversible = true;\n        } else {\n          counter++;\n          this.pendingSet.add(action.block_num);\n        }\n      }\n      if (counter > 0) {\n        console.log('Pending actions: ' + counter);\n        this.monitorLib().catch(console.log);\n      }\n    }\n  }\n\n  getServerUrl(): void {\n    let server;\n    if (environment.production) {\n      server = window.location.origin;\n    } else {\n      server = environment.hyperionApiUrl;\n    }\n    this.server = server;\n  }\n\n  async updateLib(): Promise<void> {\n    this.libNum = await this.checkLib();\n  }\n\n  async checkLib(): Promise<number> {\n    try {\n      const info = await this.httpClient.get(this.server + '/v1/chain/get_info').toPromise() as any;\n      if (info) {\n        return info.last_irreversible_block_num;\n      } else {\n        return null;\n      }\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  async initStreamClient(): Promise<void> {\n    try {\n      const health = await this.httpClient.get(this.server + '/v2/health').toPromise() as HealthResponse;\n      if (health.features.streaming.enable) {\n        this.streamClient = new HyperionStreamClient(this.server, {async: true});\n        this.streamClientLoaded = true;\n        this.streamClient.onConnect = () => {\n          this.streamClientStatus = this.streamClient.online;\n        };\n\n        this.streamClient.onLIB = (data) => {\n          this.libNum = data.block_num;\n        };\n\n        this.streamClient.onData = async (data: IncomingData, ack) => {\n          if (data.type === 'action') {\n            this.actions.unshift(data.content);\n            if (this.actions.length > 20) {\n              this.actions.pop();\n            }\n            this.tableDataSource.data = this.actions;\n          }\n          ack();\n        };\n      } else {\n        console.log('Streaming disabled!');\n        this.streamClientLoaded = false;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  setupRequests(): void {\n    // find latest block\n    let maxBlock = 0;\n    for (const action of this.actions) {\n      if (action.block_num > maxBlock) {\n        maxBlock = action.block_num;\n      }\n    }\n\n    console.log(maxBlock);\n\n    // setup request\n    this.streamClient.onConnect = () => {\n      this.streamClient.streamActions({\n        account: this.account.account_name,\n        action: '*',\n        contract: '*',\n        filters: [],\n        read_until: 0,\n        start_from: maxBlock + 1\n      }).catch(console.log);\n      this.streamClientStatus = this.streamClient.online;\n    };\n  }\n\n  async loadAccountData(accountName: string): Promise<boolean> {\n    this.loaded = false;\n    try {\n      this.jsonData = await this.httpClient.get(this.getAccountUrl + accountName).toPromise() as GetAccountResponse;\n      if (this.jsonData.account) {\n        this.account = this.jsonData.account;\n      }\n\n      if (this.jsonData.tokens) {\n        this.tokens = this.jsonData.tokens;\n      }\n\n      if (this.jsonData.actions) {\n        this.actions = this.jsonData.actions;\n        this.checkIrreversibility().catch(console.log);\n        this.tableDataSource.data = this.actions;\n      }\n\n      if (this.jsonData.total_actions) {\n        this.pagService.totalItems = this.jsonData.total_actions;\n      }\n\n      this.loaded = true;\n      return true;\n    } catch (error) {\n      console.log(error);\n      this.jsonData = null;\n      this.loaded = true;\n      return false;\n    }\n  }\n\n  async loadMoreActions(accountName: string): Promise<void> {\n    const firstAction = this.actions[this.actions.length - 1];\n    const maxGs = (firstAction.global_sequence - 1);\n    try {\n      const q = this.getActionsUrl + accountName + '&global_sequence=0-' + maxGs + '&limit=50';\n      const results = await this.httpClient.get(q).toPromise() as any;\n      if (results.actions && results.actions.length > 0) {\n        this.actions.push(...results.actions);\n        this.tableDataSource.data = this.actions;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async loadTxData(txId: string): Promise<any> {\n    this.loaded = false;\n    try {\n      const data = await this.httpClient.get(this.getTxUrl + txId).toPromise();\n      this.loaded = true;\n      return data;\n    } catch (error) {\n      console.log(error);\n      this.loaded = true;\n      return null;\n    }\n  }\n\n  async loadBlockData(blockNum: number): Promise<any> {\n    this.loaded = false;\n    try {\n      const data = await this.httpClient.post(this.getBlockUrl, {\n        block_num: blockNum\n      }).toPromise();\n      this.loaded = true;\n      return data;\n    } catch (error) {\n      console.log(error);\n      this.loaded = true;\n      return null;\n    }\n  }\n\n  async loadPubKey(key: string): Promise<any> {\n    this.loaded = false;\n    try {\n      const data = await this.httpClient.get(this.getKeyUrl + key + '&details=true').toPromise();\n      this.loaded = true;\n      return data;\n    } catch (error) {\n      console.log(error);\n      this.loaded = true;\n      return null;\n    }\n  }\n\n  async getCreator(accountName: string): Promise<AccountCreationData> {\n    try {\n      return await this.httpClient.get(this.getCreatorUrl + accountName).toPromise() as AccountCreationData;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n\n  toggleStreaming(): void {\n    if (this.streamClientStatus) {\n      this.streamClient.disconnect();\n      this.streamClientStatus = false;\n      this.checkIrreversibility().catch(console.log);\n    } else {\n      this.tableDataSource.paginator.firstPage();\n      this.clearLoops();\n      this.setupRequests();\n      this.streamClient.connect(() => {\n        console.log('hyperion streaming client connected!');\n      });\n    }\n  }\n\n  clearLoops(): void {\n    if (this.predictionLoop) {\n      clearInterval(this.predictionLoop);\n    }\n    if (this.verificationLoop) {\n      clearInterval(this.verificationLoop);\n    }\n  }\n\n  disconnectStream(): void {\n    if (this.streamClient && this.streamClientStatus) {\n      this.streamClient.disconnect();\n      this.streamClient.online = false;\n      this.streamClientStatus = false;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {Title} from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChainService {\n  chainInfoData: any = {};\n\n  constructor(private http: HttpClient, private title: Title) {\n    this.loadChainData().catch(console.log);\n  }\n\n  async loadChainData(): Promise<void> {\n    try {\n      this.chainInfoData = await this.http.get(environment.hyperionApiUrl + '/v2/explorer_metadata').toPromise();\n      if (this.chainInfoData.chain_name) {\n        this.title.setTitle(`${this.chainInfoData.chain_name} Hyperion Explorer`);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {PaginationService} from './pagination.service';\n\nconst REVERT_FUNCTION_SELECTOR = '0x08c379a0';\nconst REVERT_PANIC_SELECTOR = '0x4e487b71';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EvmService {\n  loaded = true;\n\n  jsonRpcApi = environment.eosioNodeUrl + '/evm';\n  streamClientStatus = false;\n  libNum = 0;\n  streamClientLoaded = true;\n  transactions = [];\n  addressTransactions: MatTableDataSource<any[]>;\n  blockTransactions: MatTableDataSource<any[]>;\n  private server: string;\n\n  constructor(private http: HttpClient, private pagService: PaginationService) {\n    this.getServerUrl();\n    this.addressTransactions = new MatTableDataSource([]);\n    this.blockTransactions = new MatTableDataSource([]);\n  }\n\n  async callRpcMethod(method: string, params: any[]): Promise<any> {\n    try {\n      const response = await this.http.post(this.jsonRpcApi, {\n        jsonrpc: '2.0',\n        id: Date.now(),\n        method,\n        params\n      }).toPromise() as any;\n      return response.result;\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  async getBalance(address: string): Promise<number> {\n    const getBalResult = await this.callRpcMethod('eth_getBalanceHuman', [address]);\n    if (getBalResult) {\n      return Number(getBalResult);\n    } else {\n      return 0;\n    }\n  }\n\n  async getTransactionReceipt(hash: string): Promise<any> {\n    return await this.callRpcMethod('eth_getTransactionReceipt', [hash.toLowerCase()]);\n  }\n\n  async getTransactionByHash(hash: string): Promise<any> {\n    return await this.callRpcMethod('eth_getTransactionByHash', [hash.toLowerCase()]);\n  }\n\n  async getBlockByNumber(blockNumber: string, full: boolean): Promise<any> {\n    return await this.callRpcMethod('eth_getBlockByNumber', [blockNumber.toLowerCase(), full]);\n  }\n\n  async getBlockByHash(hash: string, full: boolean): Promise<any> {\n    return await this.callRpcMethod('eth_getBlockByHash', [hash.toLowerCase(), full]);\n  }\n\n  async traceTransaction(hash: string): Promise<any> {\n    return await this.callRpcMethod('trace_transaction', [hash.toLowerCase()]);\n  }\n\n  getServerUrl(): void {\n    let server;\n    if (environment.production) {\n      server = window.location.origin;\n    } else {\n      server = environment.hyperionApiUrl;\n    }\n    this.server = server;\n  }\n\n  toggleStreaming(): void {\n    this.streamClientStatus = !this.streamClientStatus;\n  }\n\n  async loadTransactions(address: string): Promise<void> {\n    const resp = await this.http.get(this.server + '/evm_explorer/get_transactions?address=' + address).toPromise() as any;\n    this.processTransactions(resp.transactions);\n    if (resp.total) {\n      this.pagService.totalItems = resp.total;\n    }\n  }\n\n  async loadBlock(blockNumber: any): Promise<any> {\n    const blockData = await this.getBlockByNumber('0x' + Number(blockNumber).toString(16), true);\n    blockData.transactions.forEach((trx) => {\n      trx.val_formatted = `${(parseInt(trx.value, 16) / 1000000000000000000 ).toFixed(4)} TLOS`\n    })\n    this.blockTransactions.data = blockData.transactions;\n  }\n\n  async loadMoreTransactions(address: string): Promise<void> {\n    console.log(address);\n  }\n\n  private processTransactions(transactions: any[]): void {\n    this.transactions = [];\n    this.transactions = transactions;\n    for (const trx of this.transactions) {\n      trx.evm_block = trx.block;\n      trx.evm_hash = trx.hash;\n      trx.val_formatted = `${parseInt(trx.value_d).toFixed(4)} TLOS`\n    }\n    this.addressTransactions.data = this.transactions;\n  }\n\n  getErrorFromOutput(output: string): string {\n    if (!output) return '';\n    if (output.startsWith(REVERT_FUNCTION_SELECTOR)) {\n      return this.parseRevertReason(output);\n    }\n\n    if (output.startsWith(REVERT_PANIC_SELECTOR)) {\n      return this.parsePanicReason(output);\n    }\n\n    return '';\n  }\n\n  parseRevertReason(revertOutput: string): string {\n    if (!revertOutput || revertOutput.length < 138) {\n      return '';\n    }\n  \n    let reason = '';\n    let trimmedOutput = revertOutput.substr(138);\n    for (let i = 0; i < trimmedOutput.length; i += 2) {\n      reason += String.fromCharCode(parseInt(trimmedOutput.substr(i, 2), 16));\n    }\n    return reason;\n  }\n  \n  parsePanicReason(revertOutput: string): string {\n    let trimmedOutput = revertOutput.slice(-2)\n    let reason;\n  \n    switch(trimmedOutput) {\n      case \"01\":\n        reason = \"If you call assert with an argument that evaluates to false.\";\n        break;\n      case \"11\":\n        reason = \"If an arithmetic operation results in underflow or overflow outside of an unchecked { ... } block.\";\n        break;\n      case \"12\":\n        reason = \"If you divide or modulo by zero (e.g. 5 / 0 or 23 % 0).\";\n        break;\n      case \"21\":\n        reason = \"If you convert a value that is too big or negative into an enum type.\";\n        break;\n      case \"31\":\n        reason = \"If you call .pop() on an empty array.\";\n        break;\n      case \"32\":\n        reason = \"If you access an array, bytesN or an array slice at an out-of-bounds or negative index (i.e. x[i] where i >= x.length or i < 0).\";\n        break;\n      case \"41\":\n        reason = \"If you allocate too much memory or create an array that is too large.\";\n        break;\t\n      case \"51\":\n        reason = \"If you call a zero-initialized variable of internal function type.\";\n        break;\t\t\n      default:\n        reason = \"Default panic message\";\n    }\t\n    return reason;\n  }\n}\n","export enum FeatureFlagName {\n  IsQueryingByBlockNumberEnabled = 'is_querying_by_block_number_enabled',\n  IsQueryingTokenValueEnabled = 'is_querying_token_value_enabled',\n  VoiceSystemAccounts = 'voice_system_accounts',\n}\n\ninterface FeatureFlags {\n  [x: string]: { defaultValue: string | number | boolean };\n}\n\nexport const featureFlags: FeatureFlags = {\n  [FeatureFlagName.IsQueryingByBlockNumberEnabled]: { defaultValue: false },\n  [FeatureFlagName.IsQueryingTokenValueEnabled]: { defaultValue: false },\n  [FeatureFlagName.VoiceSystemAccounts]: {\n    defaultValue: JSON.stringify([\n      'eosio.token',\n      'eosio',\n      'simpleassets',\n      'simplemarket',\n      'vcewaxbridge',\n      'voice.bridge',\n      'voice.pay',\n      'voice.perms',\n    ]),\n  },\n};\n\nexport interface FeatureFlagClient {\n  variation<\n    TFlag extends keyof typeof featureFlags,\n    TValue extends typeof featureFlags[TFlag]['defaultValue']\n  >(\n    flag: TFlag\n  ): Promise<TValue>;\n}\n","import { Injectable } from '@angular/core';\nimport { LDClient, LDUser, initialize } from 'launchdarkly-js-client-sdk';\nimport { environment } from 'src/environments/environment';\nimport { FeatureFlagClient, featureFlags } from './featureFlags';\n\nexport const LDUserCustomProperties = {\n  platform: 'hyperion-web',\n};\n\nexport const LDAnonymousUser = {\n  anonymous: true,\n  custom: LDUserCustomProperties,\n  key: 'anonymous',\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LaunchDarklyService implements FeatureFlagClient {\n  public static client: LDClient;\n  private user: LDUser;\n\n  public async initLaunchDarkly(): Promise<void> {\n    console.log('Initializing LaunchDarkly client-side');\n    this.user = LDAnonymousUser;\n    LaunchDarklyService.client = initialize(\n      environment.clientSideID,\n      this.user\n    );\n    await LaunchDarklyService.client.waitForInitialization();\n  }\n\n  public async variation<\n    TFlag extends keyof typeof featureFlags,\n    TValue extends typeof featureFlags[TFlag]['defaultValue']\n  >(flag: TFlag): Promise<TValue> {\n    const defaultValue = featureFlags[flag].defaultValue;\n    await LaunchDarklyService.client.waitUntilReady();\n\n    return LaunchDarklyService.client.variation(`${flag}`, defaultValue);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaginationService {\n  public totalItems = 0;\n  constructor() { }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {GetTableByScopeResponse, TableData} from '../interfaces';\nimport {Router} from '@angular/router';\nimport { LaunchDarklyService } from 'src/app/services/launch-darkly/launch-darkly.service';\nimport { FeatureFlagName } from 'src/app/services/launch-darkly/featureFlags';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  searchAccountUrl: string;\n  featureFlagClient: LaunchDarklyService;\n  isQueryingByBlockNumberEnabled: boolean;\n\n  constructor(private httpClient: HttpClient, private router: Router) {\n    this.searchAccountUrl = environment.eosioNodeUrl + '/v1/chain/get_table_by_scope';\n    this.featureFlagClient = new LaunchDarklyService();\n  }\n\n  async filterAccountNames(value: string): Promise<any> {\n\n    if ((value && value.length > 12) || !value) {\n      return [];\n    }\n\n    try {\n      const sValue = value.toLowerCase();\n\n      const requestBody = {\n        code: environment.systemContract,\n        table: environment.userResourcesTable,\n        lower_bound: sValue,\n        limit: 5\n      };\n\n      const response = await this.httpClient.post(this.searchAccountUrl, requestBody).toPromise() as GetTableByScopeResponse;\n\n      if (response.rows) {\n        return response.rows.filter((tableData: TableData) => {\n          return tableData.scope.startsWith(sValue);\n        }).map((tableData: TableData) => {\n          return tableData.scope;\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  }\n\n\n  async submitSearch(searchText: any, filteredAccounts: string[]): Promise<boolean> {\n\n    const sValue = searchText.toLowerCase();\n    this.isQueryingByBlockNumberEnabled = false\n      // await this.featureFlagClient.variation(\n      //   FeatureFlagName.IsQueryingByBlockNumberEnabled\n      // );\n\n    // account direct\n    if (filteredAccounts.length > 0) {\n      await this.router.navigate(['/account', sValue]);\n      return true;\n    }\n\n    // tx id\n    if (sValue.length === 64) {\n      await this.router.navigate(['/transaction', sValue]);\n      return true;\n    }\n\n    // account search\n    if (sValue.length > 0 && sValue.length <= 12 && isNaN(sValue)) {\n      await this.router.navigate(['/account', sValue]);\n      return true;\n    }\n\n    // public key\n    if (searchText.startsWith('PUB_K1_') || searchText.startsWith('EOS')) {\n      await this.router.navigate(['/key', searchText]);\n      return true;\n    }\n\n    // block number\n    if (this.isQueryingByBlockNumberEnabled) {\n      const blockNum = searchText.replace(/[,.]/g, '');\n      if (parseInt(blockNum, 10) > 0) {\n        await this.router.navigate(['/block', blockNum]);\n        return true;\n      }\n    }\n\n    // match EVM 0x prefix\n    if (searchText.startsWith('0x')) {\n      let route;\n      switch (searchText.length) {\n        case 42: {\n          route = '/evm/address';\n          break;\n        }\n        case 66: {\n          route = '/evm/transaction';\n          break;\n        }\n        default: {\n          if (searchText.length < 16) {\n            // probably a block number in hex\n            route = '/evm/block';\n          } else {\n            console.log('Ox prefixed string with length:', searchText.length);\n          }\n        }\n      }\n      if (route) {\n        await this.router.navigate([route, searchText]);\n        return true;\n      }\n    }\n\n    console.log('NO PATTERN MATCHED!');\n    return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  clientSideID:'YOUR_CLIENT_ID',\n  production: false,\n  eosioNodeUrl: 'https://explorer.dev.vops.co',\n  hyperionApiUrl: 'https://explorer.dev.vops.co',\n  systemContract: 'eosio',\n  userResourcesTable: 'userres'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n});\n","/* (ignored) */"],"names":[],"sourceRoot":"webpack:///"}